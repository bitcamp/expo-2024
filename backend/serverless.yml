org: bitcamp
app: expo
service: expo-backend

provider:
  name: aws
  region: us-east-1
  runtime: python3.9
  stage: ${opt:stage, 'dev'}
  environment:
    EXPO_TABLE: ${file(./config/${self:provider.stage}.json):EXPO_TABLE}

  iam:
    role:
      statements:
        - Effect: "Allow"
          Action:
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
          Resource: "arn:aws:dynamodb:us-east-1:*"
        - Effect: "Allow"
          Action:
            - secretsmanager:DescribeSecret
            - secretsmanager:GetSecretValue
          Resource: "arn:aws:secretsmanager:us-east-1:*"
        - Effect: "Allow"
          Action:
            - ses:SendTemplatedEmail
          Resource: "arn:aws:ses:us-east-1:*"
        - Effect: Allow
          Action:
            - s3:PutObject
            - s3:GetObject
            - s3:ListBucket
            - s3:ListBucketVersions
          Resource:
            - "arn:aws:s3:::*"

# note: python vs js configuration file
functions:
  getSchedule:
    handler: schedule.get_schedule # GET placeholder for schedule.py
    description: Pulls all scheduling data
    events:
      - http:
          path: schedule
          method: get
          cors: true
    memorySize: 256
    timeout: 15
    provisionedConcurrency: ${self:custom.provisionedConcurrency.${opt:stage}, self:custom.provisionedConcurrency.other}
  postSchedule:
    handler: schedule.post_schedule # POST placeholder for schedule.py
    description: Posts all scheduling data
    events:
      - http:
          path: schedule
          method: post
          cors: true
    memorySize: 256
    timeout: 15
    provisionedConcurrency: ${self:custom.provisionedConcurrency.${opt:stage}, self:custom.provisionedConcurrency.other}

# portal stuff
resources: # define DynamoDB tables within serverless
  Resources:
    scheduleTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${file(./config/${self:provider.stage}.json):EXPO_TABLE}
        BillingMode: PAY_PER_REQUEST
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
      DeletionPolicy: Retain

package:
  exclude: node_modules/**

custom:
  provisionedConcurrency:
    prd: 1
    dev: 0
    other: 0
  updateEnabled:
    prd: true
    other: false
  # serverless-layers:
  #   dependenciesPath: ./package.json
