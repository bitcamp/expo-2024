Project Title,Submission Url,Project Status,Judging Status,Highest Step Completed,Project Created At,About The Project,"""Try it out"" Links",Video Demo Link,Opt-In Prizes,Built With,Submitter First Name,Submitter Last Name,Submitter Email,Notes,Bitcamp Track Challenge,Will You Be Present To Demo In Person On Sunday?,Tell Us About Your Technology Experience This Weekend.,"What School Do You Attend? If You Are No Longer In School, What University Did You Attend Most Recently?","Did You Register A Go Daddy Registry Domain Name This Weekend? If So, What Domain Did You Register? Why Did You Pick That Name?",Team Colleges/Universities,Additional Team Member Count,Team Member 1 First Name,Team Member 1 Last Name,Team Member 1 Email,...,,,,,,,,,
AI Powered Extractor for Defense Contract,https://bitcamp2024.devpost.com/submissions/507099-ai-powered-extractor-for-defense-contract,Submitted (Gallery/Visible),Pending,Submit,4/19/2024 21:01,"Inspiration

This was an interesting problem statement as it addresses the need for efficiency and accuracy in handling defense contract information. By leveraging AI technologies, we aim to streamline the process of parsing and extracting valuable data from Defense Contract Notices.

What it does

Our AI-powered solution serves as an intelligent parser capable of automatically extracting key attributes from Defense Contract Notices. It processes the notices to capture relevant information such as Federal Agency, Contract Amounts, Dates, Company Names, Locations and more. It then validates the information and creates a visual data for analyis.

How we built it

We built the solution by combining various AI and machine learning techniques, including LLM (Large Language Model), information extraction, and data analysis. Initially, we scraped the website of Defense Contracts from the provided source using web scraping tools. Next, we employed LLM to parse the text and identify relevant entities and attributes within the contract notices. We extracted information such as Federal Agency names, contract amounts, dates, and company names.

Challenges we ran into

Accomplishments that we're proud of

What we learned

What's next for AI Powered Extractor for Defense Contract
",https://github.com/nidhikamath2102/WebScraper,,"Best Bitcamp Hack - Bitcamp, Best First Time Hack - Bitcamp, Best AI Powered Solution for Defense Contracts - Bloomberg Industry Group","python, openai, guardrails, rag, provenancellm",Nidhi,Kamath,kamathnidhi98@gmail.com,,Best Machine Learning Track Hack - Bitcamp,Yes,"We used Provinence LLM for validating our extracted data. It was an interesting find and we found it after a lot of research, trial and errors.",Virginia Tech University,,,2,Kunal,Mahato,mahatokunal41@gmail.com,Manim,Tirkey,mtirkey@vt.edu,Test,Test,test@gmail.com,,Hello,Hi,hellohi@gmail.com
Untitled,,Draft,Pending,Manage team,4/19/2024 21:06,,,,,,Kunal,Mahato,mahatokunal41@gmail.com,,,,,,,,0,,,,,,,,,,,,,
Kadak,https://bitcamp2024.devpost.com/submissions/507102-kadak,Submitted (Gallery/Visible),Pending,Submit,4/19/2024 21:11,"Inspiration

Hard

What it does

PDF-> 

How we built it

flask, python

Challenges we ran into

figuring out how to do embeddings

Accomplishments that we're proud of

learning about embeddings, vectors, NLP, and LLMS

What we learned

working with LLMs and doing AI/ML

What's next for Kadak

faster processing time
",,,"Best Bitcamp Hack - Bitcamp, Best UI/UX Hack - Bitcamp, University Course Catalog Data Extraction and Query Challenge - Xficient","flask, python, langchain, pinecone",Sahil,Jagtap,sahil.jagtap45@gmail.com,,Best Machine Learning Track Hack - Bitcamp,Yes,"flask, langchain, pdf reader",George Mason University,,George Mason University,1,Suchita,Hadimani,suchitastargirl@gmail.com,,,,,,,,,,
Resolve,,Draft,Pending,Project overview,4/19/2024 21:27,,,,,"plasmo, react, flask, openai, chromeapi",Andrew,Yang,andrewyang1015@gmail.com,,,,,,,University of Maryland - College Park,1,Andy,Diep,adiep@terpmail.umd.edu,,,,,,,,,,
Untitled,,Draft,Pending,Manage team,4/19/2024 21:38,,,,,,Jack,Sidle,jsidle1@umbc.edu,,,,,,,University of Maryland - Baltimore County,0,,,,,,,,,,,,,
MarshiesGuard,https://bitcamp2024.devpost.com/submissions/507111-marshiesguard,Submitted (Gallery/Visible),Pending,Submit,4/19/2024 21:39,"Inspiration

We were tired of constantly being wary of sites or links on the internet, or if our emails were secure. As a result, we decided to make a hub that would check for people whether a link was safe, or if an email had been compromised.

What it does

It essentially allows a user to copy and paste a link into the Chrome extension, letting them know whether or not their email has been compromised, or using a comparison between 92 antiviruses, if the link is secure.

How we built it

We built it using a combination of HTML, CSS, javascript and pixel art editing to make custom images and gifs for our processes. 

Challenges we ran into

We ran into several issues along the way, the first being how in the world to make this into a Chrome extension. In all honesty, we are all freshmen who don't have much experience in coding in general, therefore learning all the nitty-gritty of making a Chrome extension was a lot. Aside from that, we also ran into several bugs along the way, one example being how to detect links that we didn't personally put into the code. This was exceptionally difficult, as we didn't know about the mutations handler before, and from a background with little to no Javascript, was a big deal. Additionally, one of us had to learn how to do front end, another had to learn graphic designing in terms of pixel art, for this project to then finally come together in the end. 

Accomplishments that we're proud of

We are very proud of the challenges we overcame aforementioned. As not-so-experienced coders, or artists, it truly was a difficult journey, but with a beautiful project, we can say we are truly marshmallow guards now.

What we learned

Ironically, the member who was experienced in backend on our team ended up doing front end, and the person experienced in frontend ended up doing back end, so they ended up learning the skills that the other had. Additionally, one of our members ended up learning how to do pixel art going from a total beginner, to finally making our cute marshmallow mascot, Marshie! 

What's next for MarshiesGuard

Well, we are hoping to further complete it in the future. There are some implementations we couldn't implement despite the assistance of 5 different mentors T-T, such as a toggle button that is then linked to the hover and turns on or off the hover effects, or the hover effect that immediately fetches the link without actually clicking on the link, and processes it in our extension.
",https://github.com/ZyadKhan05/MarshiesGuard,,"Best UI/UX Hack - Bitcamp, People's Choice Hack - Bitcamp,  Best Razzle Dazzle Hack - Bitcamp","html, javascript, css, pixelart",Zyad,Khan,zhk6319@gmail.com,,Best Cybersecurity Track Hack - Bitcamp,Yes,"We used HTML, CSS, and JS to create a Google Chrome extension using the Chrome Web Dev tools.","University of Maryland, College Park",,"University of Maryland - College Park, Hillel Academy",2,HassanNakib,Nakib,alhassan.nakib55@gmail.com,egg,egg,eggramani@gmail.com,,,,,,,
Untitled,,Draft,Pending,Manage team,4/19/2024 21:40,,,,,,JonnyRoth2,Roth,jonnyroth12@gmail.com,,,,,,,University of Maryland - College Park,0,,,,,,,,,,,,,
Untitled,,Draft,Pending,Manage team,4/19/2024 21:40,,,,,,Yiting,Zheng,sapphire32123@gmail.com,,,,,,,,2,Collin,Chiang,collin.chiang1@gmail.com,Darren,Yang,dyangpers@gmail.com,,,,,,,
Butcamp,,Draft,Pending,Project overview,4/19/2024 21:41,,,,,,Claire,Chen,claire13985@gmail.com,,,,,,,"richard montgomery high school, University of Maryland - College Park",1,Rachel,Kim,yseo7045@gmail.com,,,,,,,,,,
Untitled,,Draft,Pending,Manage team,4/19/2024 21:49,,,,,,JonnyRoth2,Roth,jonnyroth12@gmail.com,,,,,,,University of Maryland - College Park,0,,,,,,,,,,,,,
upsanddowns,,Draft,Pending,Project overview,4/19/2024 21:53,,,,,"javascript, python",Declan,Amoako,decavacado@gmail.com,,,,,,,"umbc, University of Maryland - College Park, WWP High School South",3,Varun V,Rao,varunvellorerao@gmail.com,Varun,Kota,varunk3249@gmail.com,,,,,,,
Untitled,,Draft,Pending,Manage team,4/19/2024 21:53,,,,,,JonnyRoth2,Roth,jonnyroth12@gmail.com,,,,,,,University of Maryland - College Park,0,,,,,,,,,,,,,
Untitled,,Draft,Pending,Manage team,4/19/2024 21:54,,,,,,Shiqi (Cathy),Wu,cathywu312@gmail.com,,,,,,,,0,,,,,,,,,,,,,
Mortgage Master,,Draft,Pending,Project overview,4/19/2024 21:59,,,,,,Sathvika,Sangoju,sangojusathvika@gmail.com,,,,,,,University of Maryland - College Park,3,Dhruvi,Kadhiwala,kadhiwala.dhruvi@gmail.com,Aman,Talreja,atalreja@terpmail.umd.edu,,,,,,,
Untitled,,Draft,Pending,Manage team,4/19/2024 22:03,,,,,,ayanban928,Banerjee,ayanbanerj@gmail.com,,,,,,,University of Maryland - College Park,1,Raghav,Misra,raghav.m2014@gmail.com,,,,,,,,,,
Still in progress....,,Draft,Pending,Additional info,4/19/2024 22:09,"Inspiration

xxx

What it does

How we built it

Challenges we ran into

Accomplishments that we're proud of

What we learned

What's next for Still in progress....
",https://github.com/Cruz-Alexander2?tab=repositories,,,javascript,Cruz-Alexander2,Cruz,alexcruz@umd.edu,,,,xxx,University of Maryland - College Park,,University of Maryland - College Park,2,llienoekul,O'Neill,lukeponeill@gmail.com,Ryley,Haynes,ryley.haynes9@gmail.com,,,,,,,
Untitled,,Draft,Pending,Manage team,4/19/2024 22:40,,,,,,Irene,Lee,irene.haebin.lee@gmail.com,,,,,,,University of Maryland - College Park,0,,,,,,,,,,,,,
Untitled,,Draft,Pending,Manage team,4/19/2024 23:00,,,,,,Tharun Kumar Reddy,Polu,polutharun528@gmail.com,,,,,,,University of Maryland - College Park,0,,,,,,,,,,,,,
spicy beef ramen,,Draft,Pending,Project overview,4/19/2024 23:01,,,,,python,Jonathan,Wu,jonathanw2856@gmail.com,,,,,,,University of Maryland - College Park,1,Brennen,Le,brennenle@yahoo.com,,,,,,,,,,
Team Flying Pandas,,Draft,Pending,Project overview,4/19/2024 23:24,"Inspiration

What it does

How we built it

Challenges we ran into

Accomplishments that we're proud of

What we learned

What's next for Team Flying Pandas
",https://colab.research.google.com/drive/12ix6YETzITI0WbhpvN1JLBlMz4k2EUOX#scrollTo=nfkB0oRvaiMq,,,,Varun,Singh,varun.singh2026@gmail.com,,,,,University of Maryland,,"Lower Moreland High School, University of Maryland - College Park",2,Kevin,Li,kli36@terpmail.umd.edu,Chase,LaBarre,obfuscatedfuture@protonmail.com,,,,,,,
Experience Points,https://bitcamp2024.devpost.com/submissions/507159-experience-points,Submitted (Gallery/Visible),Pending,Submit,4/19/2024 23:28,"Inspiration

We were inspired by the potential pro-social uses of blockchain technology that have been discussed on podcasts by some of our favorite intellectuals. Starknet functions as a core scaleup solution to the Ethereum and as a team very interested in emerging applications of blockchain technology it demanded our attention.

What it does

Our project creates a fungible blockchain token (a cryptocurrency) called ""Experience Points"". This token can be built upon to extend its functionality in later projects. Our design intent is to use it as a voting token to help coordinate behavior through the writing of a Decentralized Autonomous Organization (DAO) set of smart contracts. 

How we built it

We used the Cairo programming language to write and deploy a Smart Contract on the Starknet developer blockchain.

Challenges we ran into

The compiler for the local node didn't run on windows or my linux command prompt, so we shifted development to our single MacBook.

Accomplishments that we're proud of

Designed a blockchain token that can be called by various other smart-contracts, like crypto-wallets and transactions.

What we learned

As beginner to intermediate programmers we learned the process of quickly learning a new programming language and development environment. As blockchain enthusiasts we learned about the design philosophy behind Starknets scaleup solution for Ethereum.  

What's next for Experience Points

Integrate experience with a habit tracker to help gamify one's life. Utilize Experience Points as the central voting token of an investment/ charity DAO. Advance decentralized finance as a mechanism of human coordination.
",https://github.com/adventuringsociety/Starknetproject,,"Best First Time Hack - Bitcamp, Best Domain Name from GoDaddy Registry - MLH, Best Use of Starknet - MLH","starknet, cairo",Monte,James,montej39@gmail.com,,I don't want to submit to any Bitcamp track-specific challenges. I understand that I can still participate in other Bitcamp sponsored challenges.,Yes,"We used the Starknet Web3 Platform to explore various smart contract use-cases, designs andimplementations. We found the documentation quite helpful. We really enjoyed the design philosophy behind this ZK rollup . We got carried away discussing the design philosophy behind it, exploring the implications it has for blockchain economics and civilizations. A turning complete programming language, like Cairo, is quite a feature to include on a blockchain system.","University of Maryland, College Park",vita.courses,University of Maryland - College Park,1,Luke,Champion,lchampi1@terpmail.umd.edu,,,,,,,,,,
Untitled,,Draft,Pending,Manage team,4/20/2024 0:53,,,,,,Brian,Lau,blau1@terpmail.umd.edu,,,,,,,University of Maryland - College Park,0,,,,,,,,,,,,,
Xplore,,Draft,Pending,Project overview,4/20/2024 1:36,"Inspiration

We were inspired by all of our experiences of moving to new cities this past summer for internships. We felt lost after each moving to different cities and found it hard to meet new people who shared the same hobbies as us. We needed a tool we could use to meet new friends we could truly connect with and make memories with. 

What it does

Our product ultimately brings people together off the screen. When a new user joins, we try to learn more about them by asking them to describe themselves and identify their hobbies and interests. Once Xplore has this information, it uses AI to identify all relevant upcoming activities and events in the user's city. The user can filter results by date and cost and then pick and choose which ones they are most interested in. After picking a few activities, the user is added to a queue for each of their choices. Queues are sized appropriately for each activity and are made up of other users who also chose those activities. Queues will close off once filled up and queue members can chat online, meet up in person, and go together as a group. Users also have the option of making their own activities and events so every niche is represented. We encourage users to utilize the app to start lifelong friendships, and if all goes well, they may even move off of our platform once they find their group. 

How we built it

Challenges we ran into

Accomplishments that we're proud of

What we learned

What's next for Xplore

We plan on further perfecting our creation as well as a potential public release once we have everything sorted out. We hope to get criticism and feedback throughout our journey so we provide value for our users to the best of our ability.
",,,,,r-arutla,Arutla,rohan.arutla@gmail.com,,,,,"University of Maryland, College Park",,University of Maryland - College Park,3,Davayan,Sanyal,davayansa@gmail.com,Sachin,Naraparaju,sachinnarap@gmail.com,,,,,,,
Warming Wiki,,Draft,Pending,Additional info,4/20/2024 4:08,"Inspiration

What it does

How we built it

Challenges we ran into

Accomplishments that we're proud of

What we learned

What's next for TBD
",,,"Best Bitcamp Hack - Bitcamp, Best Social Good Hack - Bitcamp, Best Sustainability Hack - Bitcamp, Best Domain Name from GoDaddy Registry - MLH, Best DEI Hack sponsored by Fidelity - MLH, Most Philanthropic Hack - Bloomberg, Best Use of APIs related to Housing/Climate Change - Fannie Mae",tbd,Aditya,Kishore,adityakishore2004@gmail.com,,I don't want to submit to any Bitcamp track-specific challenges. I understand that I can still participate in other Bitcamp sponsored challenges.,Yes,TBD,University of Maryland at College Park,warming.wiki,"University of Maryland - College Park, University of Maryland - University College",3,Sakthi,Chandramohan,sakthichandramohan04@gmail.com,ttoalima,,toalimatamasese@gmail.com,,,,,,,
"BIG, LARGE, OBTUSE DATA ANALYSIS",https://bitcamp2024.devpost.com/submissions/507301-big-large-obtuse-data-analysis,Submitted (Gallery/Visible),Pending,Submit,4/20/2024 8:21,"
Agile Development 
Artificial Intelligence (AI)
Big Data
Blockchain
Cloud Computing
Cybersecurity
Deep Learning
Digital Transformation
Disruptive Innovation
Edge Computing
Gamification
Growth Hacking
Hyperautomation
Internet of Things (IoT)
Low-code/No-code Development
Machine Learning (ML)
Metaverse
Multi-cloud
Natural Language Processing (NLP)
Open Source
Scalability
Security by Design
Serverless Computing
Single Sign-On (SSO)
Software-as-a-Service (SaaS)
Thought Leadership
User Experience (UX)
User Interface (UI)
Virtual Reality (VR)
Web3
Augmented Reality (AR)
Not Reality (NR)
Bandwidth
Biometrics
Business Intelligence (BI)
Citizen Developer
Cognitive Computing
Conversational AI
39.Data Fabric
Data Lake
Data Lineage
Data Mesh
DevOps
Digital Experience (DX)
Digital Twin
46.Edge AI
Ethical AI
Hyperautomation
Infrastructure as Code (IaC)
50 Internet of Behaviors (IoB)
Unethical AI
Cybersecurity
CyberInsecurity
Small Data
Ved Shah
Leauge of Legends
Chinese Communist Tools

",,,,"data, vedshah",Heng,Ye,heng@yeheng.org,,Best Advanced Quantum Track Hack,Yes,big data analayzing,Smithtown High School West,bigdata.big,Smithtown High School West,2,Timmy,Papadopoulos,timmypapadopoulos20@gmail.com,Saaketh,Manepalli,saaketh.manepalli@gmail.com,,,,,,,
CoursifyUMD,,Draft,Pending,Additional info,4/20/2024 8:23,"Inspiration

Students have a difficult time determining what courses to take. We wanted to create a solution that could recommend courses most tailored to them.

What it does

Our app allows users to select options about themselves regarding their major, year, personal interests, and desired industry field, then recommends several lists of courses to take that fit them. These lists are divided by the individual characteristics entered by the user. There is a list of courses based on their major, a list based on their personal interests, and a list based on their desired industry field. 

How we built it

We used a Python Flask application to organize the backend and React to create the front end. We created a script to web scrape data from the Testudo and PlanetTerp websites, embed the data using OpenAI embeddings, and stored the resulting vectors in a Pinecone vector database. We also created a Supabase database to store user data and their queries. 

Challenges we ran into

Because we worked on the Backend and Frontend separately, we had a difficult time integrating them together. We were ultimately able to overcome this problem by discussing each section thoroughly and properly explaining how data is sent across platforms.  

Accomplishments that we're proud of

We are proud to create an application using a React frontend and Flask backend, creating a secure database to house user data, and constructing a vector database to query results.

What we learned

We learned to work with technologies such as OpenAI embeddings, vector databases, database querying, and general frontend and backend development.

What's next for CoursifyUMD

In the future, we would like to implement more personalized features for users to get more generated curated lists. We'd also like to look into other algorithms that could provide even more relevant results. 
",https://github.com/rohanshar77/CoursifyUMD/tree/main,https://youtu.be/BwgRIwhSdoI,,"react, pinecone, flask, supabase, openai, webscraping",Saketh,Kura,saketh.kura@gmail.com,,,,"We had a great time at Bitcamp! We worked on several technologies including Pinecone, OpenAI, Flask, and React. We all had good experiences with them.",University of Maryland,,University of Maryland - College Park,1,Rohan,Sharma,rohan77@icloud.com,,,,,,,,,,
DataLand ,,Draft,Pending,Project details,4/20/2024 9:51,"Inspiration

My team and I were inspired by Fannie Mae because they presented us with a challenge, and because my team is all about taking on challenges, we took the blind challenge head on and began to develop an interest in the topic of the connection between natural disasters and foreclosure, as people all over the world are experiencing this even today. Our goal is to provide people with the option of being aware of the area they are moving into. 

What it does

Our software allows individuals to see the places that are most likely to be foreclosed on because of natural catastrophes. It allows people to be aware of the chances / rates of this situation. ## How we built it

Challenges we ran into

The coding language and the data that needed to be obtained was a major problem because we needed to do a lot of study for each section of the world. We also wanted to integrate a 3D figure. 

Accomplishments that we're proud of

We are proud of the research we conducted during the project, the design of the logo and app, the ideas we generated, and the quantity of assistance we will be able to provide to individuals all around the world.

## What we learned
We discovered about the connection between foreclosure and natural disasters, and we also learned that it has a greater impact on people than was previously revealed to the public. 

What's next for DataLand

DataLand would like to become an extension that you could add so that when people are looking for a home, the app will display users homes that have a low risk of being foreclosed on due to a disaster. 
",,,Best Use of APIs related to Housing/Climate Change - Fannie Mae,java,Dakota,Sams,samsdakota15@gmail.com,,,,,,,,0,,,,,,,,,,,,,
Untitled,,Draft,Pending,Manage team,4/20/2024 10:09,,,,,,Mark,Davis,markdavis0601@gmail.com,,,,,,,,0,,,,,,,,,,,,,
Matching Students Abroad,,Draft,Pending,Additional info,4/20/2024 10:16,"Inspiration

My partner and I studied abroad in Singapore and wanted to meet new faces.

What it does

Matches students while they are abroad.

How we built it

Using React Native and Firebase.

Challenges we ran into

Frontend and backend integration.

Accomplishments that we're proud of

What we learned

What's next for Matching Students Abroad
",,,,typescript,Miranda,Song,songmiranda2002@gmail.com,,,,N/A,University of Maryland,,University of Maryland - College Park,1,Maryann,Vazhapilly,maryann.vazhapilly@gmail.com,,,,,,,,,,
Tell Terry,,Draft,Pending,Manage team,4/20/2024 10:27,,,,,,Chiraag,Nadig,chigu.nadig@gmail.com,,,,,,,"Robbinsville High School, University of Maryland - College Park",1,Krish,Thakker,kthakker00@gmail.com,,,,,,,,,,
Untitled,,Draft,Pending,Manage team,4/20/2024 11:12,,,,,,Mark,Davis,markdavis0601@gmail.com,,,,,,,Baltimore Polytechnic Institute,1,Jermiah,Walker,jermiahwalker157@gmail.com,,,,,,,,,,
Untitled,,Draft,Pending,Manage team,4/20/2024 11:31,,,,,,Joshua,Worku,workujoshua@yahoo.com,,,,,,,Calvert Hall College High School,0,,,,,,,,,,,,,
The Journeyman's Strife,,Draft,Pending,Manage team,4/20/2024 11:35,,https://github.com/PlantvZombie/Bitcamp2024,,,"godot, asesprite",Winton,Jones,oogabooga1271@gmail.com,,,,,Baltimore Polytechnic Institute,,"Baltimore Polytechnic Institute, Baltimore polytechnic, Baltimore polytecnic institute",2,Walter,Sibrian,walterchats1864@gmail.com,Jakob,Morales,cookiejarjakob@gmail.com,,,,,,,
HarvestMate,,Draft,Pending,Manage team,4/20/2024 11:35,,,,,,Yoseph,Getachew,ytgetachew.cs@gmail.com,,,,,,,"Baltimore Polytechnic Institute, Baltimore  PolyTechnic Institute , Calvert Hall College High School",3,Umar,Muzni,umarmuzni@gmail.com,Joshua,Worku,workujoshua@yahoo.com,,,,,,,
Untitled,,Draft,Pending,Manage team,4/20/2024 11:39,,,,,,Madhav,Murikipudi,murikipudimadhav@gmail.com,,,,,,,University of Maryland - College Park,0,,,,,,,,,,,,,
Efficace,,Draft,Pending,Project details,4/20/2024 12:16,"Inspiration

As I took my government and politics class this year, I became increasingly disturbed by the political polarization and low voter turnout in the United States. Additionally, I wanted to learn how to create a log-in page and store information. Combined, I was inspired to create a website.

What it does

For now, you are able to record your stances towards certain political issues you chose.

How we built it

HTML,PHP (xampp)

Challenges we ran into

I couldn't figure out how to store html data into the database, and website styling is always quite difficult.

Accomplishments that we're proud of

Functional login/signup page.
List maker for political issues.

What we learned

PHP, styling techniques.

What's next for Éfficace

With extension networking, I would use the data from the stored stances on political issues to match them  with politicians relevant to the user who have similar ideas. I would also have a learning page to better educate people on politics itself and tips. Lastly, I would improve security and the database, using a paid, online server instead of xampp.
**Please note that the replit link solely for viewing the website's content, and does not have functional login/signup.
","https://github.com/HorizonHacks/Efficace/tree/main, https://8651ef4a-c3de-4266-903d-760b241f2f01-00-22zcgpgxptnfj.picard.replit.dev/index.html",https://youtu.be/Oa8B4k0LUK0,"Best Bitcamp Hack - Bitcamp, Best Social Good Hack - Bitcamp, People's Choice Hack - Bitcamp","html5, php",Thomas,Lapp,largolapp@gmail.com,,I don't want to submit to any Bitcamp track-specific challenges. I understand that I can still participate in other Bitcamp sponsored challenges.,,"Wi-Fi was understandably slow at times, but otherwise the hackathon was extremely organized!",Baltimore Polytechnic Institute,,Baltimore Polytechnic Institute,0,,,,,,,,,,,,,
Untitled,,Draft,Pending,Manage team,4/20/2024 12:44,,,,,,bhaktiheg,Hegde,bhakti.a.hegde@gmail.com,,,,,,,"University of Maryland - College Park, VIT,Vellore",1,Pragyan,Shukla,prag.shank@gmail.com,,,,,,,,,,
Untitled,,Draft,Pending,Manage team,4/20/2024 12:47,,,,"Best Domain Name from GoDaddy Registry - MLH, Best use of AI/ML Innovation for the Francis Scott Key Bridge Recovery Efforts - Cloudforce, Best AI Powered Solution for Defense Contracts - Bloomberg Industry Group, Best Financial Hack - Capital One, University Course Catalog Data Extraction and Query Challenge - Xficient",,Aryan,Agrawal,aryan527@terpmail.umd.edu,,,,,,,University of Maryland - College Park,1,Agastya,Mukherjee,amukhs13@terpmail.umd.edu,,,,,,,,,,
ROOME,,Draft,Pending,Project overview,4/20/2024 13:26,,,,,,Sania,Rashid,sania.rashid928@gmail.com,,,,,,,University of Maryland - College Park,2,sydneyrichman,Richman,sydneyrichmann@gmail.com,Nancy,Puthenpurayil,nancybijo@gmail.com,,,,,,,
Defend.io,,Draft,Pending,Additional info,4/20/2024 14:19,"Inspiration

Our team was inspired by the tendency of all public information about defensive contracts to stay unintelligible and opaque to most people who might be interested in knowing a bit more about them. They   always seem to be hidden in obscure location and concealing jargon. However, for somebody interested in understanding how they affect financial products, this information needs to be easily accessible and digestable. Hence, this project.

What it does

Defense Insights is an advanced tool to automatically extract, analyze, and visualize critical data on US defense contracts. It parses through over 2500 webpages to extract all the available historical data about all the contracts signed by the Department of Defense. Using a GPT 3.5 Turbo model, it analyzes the information and identifies nine critical data points within each contract - company name, location, federal agency, date, contract value, contract type, purpose, completion date, and contract number. This information is collected from over 30,000 contracts to be summarized and quantified. 

From over 2,500 web pages worth of unstructured contract information to structured data.

How we built it

Webscraping: We deployed Python scripts with Selenium and BeautifulSoup for dynamic web scraping to capture the latest contract documents. We also implemented a listening algorithm to check if the website has been updated every three hours.

AI Data Parsing: We used a custom-trained GPT model to intelligently parse and structure raw text into defined categories like amounts, dates, and company names.

Databases: We used a serverless managed Postgres-based database system called Neon to receive all the important json files and create the database.

Challenges we ran into

Our IP was flagged by the DoD website for repeated making requests while running the web scraper program - which was trying to access about 2,500 URLs on that website back-to-back and we were subsequently blocked from accessing the website for a time period.

The most significant challenge we ran into was tweaking the AI model to work with hundreds of never-ending edge cases which are to be expected as we are trying to obtain over 250,000 data points from purely unstructured text.

Accomplishments that we're proud of

What we learned

What's next for Defend.io
",,,"Best AI Powered Solution for Defense Contracts - Bloomberg Industry Group, Best Financial Hack - Capital One","python, selenium, beautiful-soup, gpt, neon, css, html, json",Md Sami,Alam,alam.sami.md@gmail.com,,,,Great,"Drexel University, UCLA",,"Drexel University, University of California - Los Angeles",3,Emmett,C,emmettlsc@gmail.com,Adith Tom,Alex,aa4643@drexel.edu,,,,,,,
Cerebro,https://bitcamp2024.devpost.com/submissions/507472-cerebro,Submitted (Gallery/Visible),Pending,Submit,4/20/2024 14:33,"Inspiration

For this hack, we wanted to increase the accessibility of technology for people who may have limitations with traditional input methods, such as a keyboard and mouse. By focusing on hands-free browsing, we aimed to provide an alternative solution that not only addressed these challenges but also empowered users to use the internet with greater freedom and efficiency. Through this hack, we hope to provide a more inclusive online experience where everyone can benefit from modern day technologies, regardless of their physical abilities.

What it does

Cerebro provides an accessible, hands-free alternative to internet browsing to the physically impaired. It uses computer vision to detect minor facial movements that:


Vertically scroll the webpage
Interact with detected points of interest (hyperlinks, input fields, etc…)


It also uses voice commands to:


Navigate through web browser history
Type with voice input


How we built it

The computer vision was implemented through the use of faceAPI.js, a javascript library that specializes on detecting/tracking facial movements.

The voice commands were achieved by using Google’s Web Speech API, which allowed us to easily transcribe and handle microphone input.

The link between the Chrome Extension window and the current browser window was achieved through the use of extension content scripts, which allow us to securely inject javascript from the extension into the browser. Communication between the injected scripts and the extension can then be easily achieved via Chrome’s built-in runtime event system.

Challenges we ran into

The first major challenge we ran into was the display of our live camera feed on our chrome extension. Upon attempting to do this, we ran into multiple permissions issues with chrome that we tried to resolve in many different ways. It was quite a niche problem with little documentation online, but we eventually came across a solution involving the creation of an options page within the extension that granted permission on startup.

The selection of a speech-to-text api for our extension was another difficult task. We experimented with several different options, including OpenAI’s Whisper and AssemblyAI, finally choosing to land on Google’s Web Speech API. Latency with the voice typing was a significant problem that we were running into with the other tools, and Google’s solution showed to be the best tool as it was fully integrated with Chrome and did not require any external fetch requests.

Finally, determining the methods of control for our element selection was one of our biggest challenges. Our initial approach was moving to the next element using winks, winking the right eye to go forwards and the left eye to go backwards. We were attempting to implement the approach detailed in a 2016 paper called “Real-Time Eye Blink Detection using Facial Landmarks”, using an equation that calculated an eye aspect ratio to get a number for how open the eye was. However, with many confounding variables such as the distance from the camera and the angle of the face, this implementation turned out to be nearly impossible to control. Eventually, we abandoned this approach and decided to detect eyebrow movements instead, which turned out to be surprisingly ergonomic and effective. We created our own equation for detecting changes in relative eyebrow position, making element selection much more user friendly.

Accomplishments that we're proud of

There are many aspects of Cerebro that we’re proud of. Primarily, we were very proud of the overall performance of our implementation of the AI algorithms that handle camera and audio input. They were able to detect facial movements and transcribe audio at a far greater level of accuracy than we had anticipated.

Additionally, we were also very proud of the control scheme solution that we had engineered. Our control gestures were very intuitive and simple for users. This is great as it helps achieve our goal of Cerebro being a tool that is fully accessible to everyone.

This is also our first hackathon, and our first time using a lot of these tools. While the learning process may have been frustrating at time, we are very proud of what we’ve been able to accomplish over this weekend.

What we learned

There are many things that we learned when building Cerebro.


We learned not only how to develop Chrome Extension, but also what the appropriate workflow for collaborative extension development should be.
A lot about various computer vision techniques.
How to effectively transcribe microphone input
Adaptability! (Possibly a generic answer, but still very true. There were many times when we had to rethink the design we had in mind for Cerebro).


What's next for Cerebro?

As of right now, Cerebro is a proof of concept. There is a lot that we would like to develop on further for this project to reach its true potential.

We plan to:


Fine tune the CV algorithms to be more accurate/consistent
Further develop the UI to have a more pleasant UX
Add more functionality such as zooming, tab navigation, and cursor movement
Possibly pivot away from just a chrome extension to obtain multi-platform support on various browsers.

",https://github.com/Datoneguy246/Cerebro,https://youtu.be/aeKUCiXoC18,"Best First Time Hack - Bitcamp, Best Social Good Hack - Bitcamp, Best DEI Hack sponsored by Fidelity - MLH, Most Philanthropic Hack - Bloomberg,  Best Razzle Dazzle Hack - Bitcamp","chrome, javascript, face-api, google-web-speech-api, html5, css3",Declan,Scott,datoneguy246@gmail.com,,I don't want to submit to any Bitcamp track-specific challenges. I understand that I can still participate in other Bitcamp sponsored challenges.,Yes,N/A,University of Maryland - College Park,N/A,University of Maryland - College Park,2,Tanay,Naik,tanaynaik149@gmail.com,Ryan,Shechtman,rshechtm@terpmail.umd.edu,,,,,,,
Hurrikane,,Draft,Pending,Project overview,4/20/2024 14:35,,,,,,Robert,Barkalov,robert.barkalov@gmail.com,,,,,,,Ravenscroft ,1,Eva,Barkalova,eva.barkalova@gmail.com,,,,,,,,,,
Untitled,,Draft,Pending,Manage team,4/20/2024 15:00,,,,,,Danny,Tran,trand5036@gmail.com,,,,,,,University of Maryland - College Park,0,,,,,,,,,,,,,
Cribzz,,Draft,Pending,Additional info,4/20/2024 15:07,"Inspiration

The inspiration for Cribzz sprang from a common dilemma faced by one of our team members during a temporary work relocation across states. The challenge was more than just finding a new place; it was about sharing that space with someone who not only matched in budget but also in lifestyle and habits.

Navigating through countless listings and interacting with potential roommates highlighted several problems—from clashing schedules and lifestyle discrepancies to differing views on cleanliness and guests. This experience shed light on a broader, universal issue: finding the right person to share a space with is crucial for comfort and well-being, yet often fraught with difficulty.

This realization was not unique to our situation. Across the globe, individuals moving for work, study, or personal reasons encounter similar challenges. The stress of relocation is amplified by the uncertainty of cohabitation compatibility. It became clear that there was a significant need for a more tailored, respectful, and enjoyable way to find roommates.

Cribzz was born out of the need to address these widespread challenges. By focusing on matching people based on shared living preferences and habits, Cribzz transforms the daunting task of finding a roommate into a personalized and secure experience, reducing the anxiety associated with such significant life changes. Our vision is to empower users to make informed choices about their living arrangements, helping everyone find not just a place to live, but a place to call home.

What it does

Cribzz transforms the way people find roommates by providing a detailed and intuitive platform tailored to match individuals based on compatibility in their lifestyles and living habits. Users start by creating a comprehensive profile that captures essential information such as age, daily routines, dietary preferences, pet compatibility, smoking habits, guest frequency, and more. This detailed approach ensures that every suggested match aligns closely with users' specific needs and preferences.

The heart of Cribzz is a user-friendly interface where users can explore potential roommate profiles. Beyond simple swipe mechanisms, Cribzz dives deep into the nuances of compatibility. Our sophisticated algorithm not only facilitates profile browsing but also highlights key compatibility factors and potential conflicts, such as differences in daily schedules or cleanliness standards, providing users with a thorough understanding of how well each potential roommate might align with their lifestyle.

Adding to its innovative approach, Cribzz introduces a compatibility percentage score for each potential match. This feature quantifies the level of compatibility based on a comprehensive analysis of lifestyle factors, helping users make informed decisions beyond initial impressions.

Security and privacy are paramount at Cribzz. We ensure the utmost care in handling user information, backed by robust privacy controls that empower users to manage the visibility of their profiles and personal details. This secure framework supports a trustworthy environment for users to connect confidently.

Cribzz is dedicated to making the process of finding a roommate not just easier, but a truly harmonious experience. Our aim is for every user to find not just a roommate, but the right roommate who enhances their living experience, ensuring a partnership that goes beyond mere cohabitation.

How we built it

Cribzz is developed based on the MERN Stack which is tailored to efficiently manage the full lifecycle of the application, from database operations to server-side logic and client-side interface. Our stack includes MongoDB, Express.js, Node.js, and we complemented this with CSS for styling to ensure a user-friendly and aesthetically pleasing design.

Frontend Development:
Instead of React, our frontend is crafted using traditional HTML enhanced with CSS. This approach allows us to focus on delivering a straightforward and effective user interface that is easy to navigate and visually appealing. CSS plays a crucial role in this, enabling responsive design and a consistent look and feel across different devices and screen sizes.

Backend Development:
At the heart of Cribzz's backend is Node.js, working in concert with Express.js. This combination handles our application's server-side logic and API services, providing the robustness needed for real-time interactions and data management. Node.js is particularly well-suited for handling asynchronous operations and high volumes of traffic, which is essential for a fluid user experience.

Database:
We chose MongoDB for our database needs due to its flexibility and strong performance with large datasets. MongoDB is a NoSQL database, perfect for accommodating the varied and complex data structures we manage, such as user profiles and preferences. It allows for efficient data retrieval and manipulation, which is crucial for delivering relevant roommate suggestions quickly.

Challenges we ran into

A significant challenge in developing Cribzz was our initial decision to use React for the frontend within the MERN stack framework. Motivated by React's renowned capabilities for building dynamic user interfaces, two team members dedicated a considerable amount of time to learning the framework. However, the application quickly hit a major roadblock when we attempted to integrate React with our backend.

The specific difficulties involved problems with connecting the React frontend to the Node.js and Express backend. We faced persistent issues in state management, where maintaining consistency of data across the application proved complex. Additionally, the data flow between the server and the client side was not functioning as expected, which critically hampered both the performance and development pace of our project.

As the project timeline advanced, these integration challenges led to a reassessment of our technological approach. Ultimately, we made the difficult decision to pivot from React to a more traditional and familiar setup using HTML and CSS. This required us to essentially recode our entire frontend, a daunting task given the time already invested and the project deadlines looming ahead.

This pivot was a direct response to the integration issues, aiming to streamline development and avoid further complications that could jeopardize the project's success. By shifting to HTML and CSS, we sought to regain control over the project's technical direction and ensure a smoother continuation of development.

Accomplishments that we're proud of

One of the standout accomplishments for the Cribzz project was our team's ability to rapidly adapt and execute a significant pivot under pressure. After deciding to move away from React due to integration issues, our team displayed remarkable resilience and commitment by recoding the entire frontend using HTML and CSS. This was not a small feat, particularly given the advanced stage of development and the time constraints we were facing.

A particularly proud moment was when our team pulled together for an intensive coding session at the Armory, dedicating over 15 hours in a single day to ensure that our project remained on track. This hackathon session was not just about coding; it was a testament to our team's spirit and determination. Throughout this challenging period, our collective focus was unwavering, driven by a shared commitment to see the project succeed despite the setbacks.

Successfully transitioning to a simpler, more manageable technology stack overnight and catching up to our project timeline are achievements that speak volumes about our team's capabilities. The ability to not only troubleshoot technical issues but also to execute a strategic pivot swiftly showcased our team’s technical proficiency and adaptive project management.

This experience solidified our belief in our collective strength and our capability to tackle and overcome unexpected challenges. The pride we take in this accomplishment is immense, not only for the technical achievements but also for the teamwork and perseverance that turned a potential crisis into a triumph for Cribzz.

What we learned

Throughout the development of Cribzz, our team gained invaluable lessons in both technical skills and project management. One of the most significant educational experiences was our foray into learning React. Although we ultimately did not use React in our final project, the process of exploring and attempting to integrate it provided us with a deeper understanding of modern JavaScript frameworks and their ecosystems. This knowledge has prepared us better for future projects where such technologies might be more applicable.

We also learned the importance of aligning technology choices with the team’s existing skills and project requirements. Our attempt to use React highlighted the challenges of adopting new technologies under tight deadlines and without prior experience, teaching us to better assess the feasibility of new tools in relation to our project timelines and goals.

The pivot from React to HTML and CSS was a practical lesson in adaptability and decision-making under pressure. It reinforced the importance of flexibility in project development, especially when faced with critical technical issues. We learned that being willing to make tough decisions, such as technology shifts, is crucial to keeping a project on track.

Moreover, our hackathon coding session was not only a testament to our commitment but also a real-time lesson in teamwork and perseverance. We learned that effective communication and mutual support are as vital as technical acumen in achieving project milestones.

Overall, the development of Cribzz enriched our team with new technical knowledge, enhanced our problem-solving skills, and strengthened our capability to work collaboratively under pressure. Each lesson learned from this project has left us better equipped for future challenges in the fast-evolving field of software development.

What's next for Cribzz

Looking ahead, Cribzz is set to evolve and expand in ways that enhance user experience and extend our reach. Our immediate focus is on refining our platform to include more interactive and user-friendly features. Key among these will be the introduction of an in-app messaging system, allowing users to communicate directly within Cribzz. This will facilitate better interactions between potential roommates before they decide to live together, enhancing trust and compatibility.

We are also planning to expand our algorithm to include additional user preferences and lifestyle factors. This will refine our matching process further, making it more granular and tailored to individual needs. By incorporating machine learning techniques, we aim to continuously improve the algorithm based on user feedback and interaction patterns, ensuring that our matches become more accurate over time.

In terms of growth, we intend to extend our service to more cities and possibly internationally. Partnering with universities and real estate agencies will allow us to reach a broader audience, helping more people find compatible roommates as they transition to new phases of their lives.

Furthermore, we plan to enhance the scalability of our platform to handle an increasing number of users without compromising on performance. This will involve upgrading our infrastructure and possibly adopting more robust technologies that can support larger datasets and more complex queries.

Lastly, we are committed to maintaining the highest standards of privacy and security for our users. As part of this commitment, we will continue to update our security measures in line with the latest industry standards and regulations.
",,,,"javascript, html, css, node.js, mongodb, express.js",Arushi,Tibrewal,atibrew1@terpmail.umd.edu,,I don't want to submit to any Bitcamp track-specific challenges. I understand that I can still participate in other Bitcamp sponsored challenges.,Yes,"This weekend at the hackathon provided our team with a hands-on, intense, and ultimately rewarding experience with several technologies, particularly MongoDB and the broader MERN stack. MongoDB stood out as a pivotal component of our project, Cribzz, due to its flexibility and powerful document-based structure which perfectly supported our needs for dynamic data management.

MongoDB:
Our interaction with MongoDB was largely positive, showcasing its robust capability in handling unstructured data. It allowed us to efficiently store and manage diverse user information and preferences, which are core to our roommate matching algorithm. However, we faced some challenges in optimizing query performance, which was a learning curve for us. The flexibility of MongoDB’s schema-less design, while beneficial, required us to think carefully about data structure to ensure efficient data retrieval and scalability.

MERN Stack:
Working with the MERN stack was an enlightening experience, especially integrating Express and Node.js to create a responsive backend. Although we initially faced hurdles with integrating React, the rest of the stack facilitated a smooth development process once we pivoted to using traditional HTML and CSS for the frontend. Node.js provided the scalability we needed, handling multiple connections at once without a hitch.

React:
Our experience with React, although challenging, taught us valuable lessons about the importance of matching technology with team skills and project timelines. React’s component-based architecture and state management features, while powerful, required a deeper initial learning investment than we were able to commit during this fast-paced hackathon.

Overall, the technology experience this weekend was immensely instructive. We appreciated the opportunity to dive deep into MongoDB and the MERN stack, gaining insights that will undoubtedly benefit our future projects. Our challenges with React have also prepared us better for future endeavors, highlighting areas for further learning and development.",University of Maryland - College Park,,University of Maryland - College Park,2,Ohsung,Kwon,kwon43536@gmail.com,Jay,Li,jli35810@terpmail.umd.edu,,,,,,,
Puddle,,Draft,Pending,Additional info,4/20/2024 15:27,"Inspiration


As students, we have a lot of expenses to cover, many of which are paid together with our friends. Normally, it is very hard to keep track of each person's dues and how much they've paid. 
## What it does
Puddle is an app that makes the process of pooling money easier. Users can create ""pools"" which they can invite friends to. Each pool keeps track of how much each person has to pay, and how much they've paid. 
## How we built it
First, we planned out a list of features that we wanted to make. Then, we went on to our prototyping stage, which included a rough skeleton draft and a finalized Figma prototype. The app was built with SvelteKit for the front-end, and Firebase for our back-end, database, and authentication manager. 
## Challenges we ran into
Getting authentication to work was one of the most time-consuming parts of the project. 
## Accomplishments that we're proud of
We're proud that we were able to develop an app following a clear timeline.
## What we learned
We've learned about the internal workings of financial management services and how to use Capitol One's Nessie API. Plus, this was our first time making a PWA (progressive web app).
## What's next for Puddle
In the future, we hope to build Puddle as a native app. 

",,,"Best Bitcamp Hack - Bitcamp, Best UI/UX Hack - Bitcamp, Best Moonshot Hack - Bitcamp, People's Choice Hack - Bitcamp, Best Financial Hack - Capital One","sveltekit, css3, tailwind, html5, http, javascript, typescript, propelauth, firestore, firebase, figma",Ruadhan,KM,ruadhan.kellermcleer@gmail.com,,Best App Dev Track Hack - Bitcamp,Yes,The wifi was great.,University of Maryland - College Park,,"Wilson HS, Woodrow Wilson High School, Jackson-Reed High School, University of Maryland - College Park",3,Gus,Ruben,gusruben@protonmail.com,Josh,Epee,joshuaepee1@gmail.com,,,,,,,
least supportive emotional support animal,https://bitcamp2024.devpost.com/submissions/507522-least-supportive-emotional-support-animal,Submitted (Gallery/Visible),Pending,Submit,4/20/2024 15:36,"Inspiration

We think therapy nowadays is expensive and doesn't always work. Our solution provides easily accessible, free therapy that guarantees you the value you did not pay for. Our app connects you with one of our unlicensed feline therapists, who are less than willing to help you!

What it does

Our app allows you to connect with a feline therapist. Once you enter the chat, you can talk about your problems and get responses from select cats.

How we built it

We ran npm create svelte@latest myapp and the rest of the project built itself.
We used SvelteKit for the frontend and swiped our card for the OpenAI API. We created a basic chat interface that responds to a user's message with a response generated by GPT-3.

Challenges we ran into

Svelte was completely new to us so we had to learn everything, without the support of therapists. 

Accomplishments that we're proud of

Diving into Svelte headfirst!

What we learned

We learned how to use Svelte, Svelte project structure, and how to use the OpenAI API. During our project, we also explored other APIs like Giphy, but we ended up not including those in our project.

What's next for least supportive emotional support animal

New animals? Gacha? Subscription based service? Crypto mining in the background?
",https://github.com/spectregray/least-supportive-emotional-support-animal/,,"Best First Time Hack - Bitcamp,  Best Razzle Dazzle Hack - Bitcamp","svelte, javascript, openai, web",selena,Bao,appleselena@gmail.com,,I don't want to submit to any Bitcamp track-specific challenges. I understand that I can still participate in other Bitcamp sponsored challenges.,No,We used SvelteKit. It was a really good experience because we were able to get started and learn it easily with the help of docs and the internet.,"University of Maryland, College Park",,University of Maryland - College Park,1,Jason,Liau,jasonbenjaminliau@gmail.com,,,,,,,,,,
UMD Eats,https://bitcamp2024.devpost.com/submissions/507607-umd-eats,Submitted (Gallery/Visible),Pending,Submit,4/20/2024 17:25,"Inspiration

As UMD students we recognized the poor accessibility on the UMD app on updated meals offered at the dining halls on a daily basis. Our team and I decided to use this hackathon as an opportunity to begin a project that will help update the UMD App in a more efficient manner and alert UMD students when and where their favorite meals will be offered.

What it does

Though our app does not include full functionality, it presents the meals offered at the Yahentamitsi on a specific day. This data can be used by the user to determine meals offered at breakfast, lunch, and dinner.

How we built it

Our team used VSCode to collaborate our code and implement it. We used the LiveShare feature to share code and used languages such as HTML/CSS, JavaScript, Python, BeautifulSoup, Node.js, and more.

Challenges we ran into

Several challenges we ran into was the lack of experience with web scraping as well as web-development. After watching tutorials, using HTML templates, and receiving help from mentors we were able to outline our project and begin coding.

Accomplishments that we're proud of

We are extremely happy we got this opportunity to learn more about web development and web scraping as it is skills we will definitely be using in the future.

What we learned

We learned how to trouble shoot our code and debug our design. We also gained exposure to new coding IDEs, languages, and skills. We learned how to collaborate inside a team and work with one another with assigning tasks and updates. 

What's next for UMD Eats

We hope to further implement the unique features to our project in the coming months and make it a fully functional website.
","https://github.com/NithikaRamanathan/UMD-Eats, https://umd-eats-server.vercel.app/#",,"Best Bitcamp Hack - Bitcamp, Best First Time Hack - Bitcamp, Best Domain Name from GoDaddy Registry - MLH, University Course Catalog Data Extraction and Query Challenge - Xficient","html, css, javascript, python",MeenakshiRS1,Rama Subramanian,mramasub@terpmail.umd.edu,,I don't want to submit to any Bitcamp track-specific challenges. I understand that I can still participate in other Bitcamp sponsored challenges.,Yes,"Our team got the opportunity to explore a lot of different concepts and frameworks. We learned more about web development, web scraping, and using github.","University of Maryland, College Park",umd-eats.biz,"University of Maryland - College Park, University of Maryland - University College",3,Sean,Stone,seans1022@gmail.com,atan333,Tan,amytan@terpmail.umd.edu,,,,,,,
Untitled,,Draft,Pending,Manage team,4/20/2024 17:43,,,,,,Thejitha,Rajapakshe,thejitha.rajapakshe@gmail.com,,,,,,,Montgomery College,0,,,,,,,,,,,,,
Climate Change and Affordability in the United States,https://bitcamp2024.devpost.com/submissions/507635-climate-change-and-affordability-in-the-united-states,Submitted (Gallery/Visible),Pending,Submit,4/20/2024 17:45,"Inspiration

As environmentalists, we were interested in the Fannie Mae BitCamp Hackathon Challenge because it connected programming with an issue we are passionate about. 

What it does

Our program takes _ and reutnrs _. 

How we built it

We used data provided by Fannie Mae covering housing for 6 major cities as well as the OpenMeteo API. Our final Python program uses Numpy to analyze the correlation between _. 

Challenges we ran into

We initially struggled to finding the proper APIs and how to use them. However, once we figured out how to expand the data, we were able to work much faster.

Accomplishments that we're proud of

We made the OpenMeteo API work.

What we learned

We learned how to use the Python libraries Numpy, Matplotlib, and Pandas, as well as how to use them to process large amounts of data. 

What's next for Climate Change and Affordability in the United States

Now knowing which states are relatively affordable and resilient to the effects of climate change, we are interested in seeing what can incentivize people to move to those states. 
",https://github.com/Dakshita24/Bitcamp-2024,,"Best First Time Hack - Bitcamp, Best Social Good Hack - Bitcamp, Best Use of APIs related to Housing/Climate Change - Fannie Mae","python, open-meteo-forecast, numpy, pandas",Riya,Thapar,riyathapar06@gmail.com,,I don't want to submit to any Bitcamp track-specific challenges. I understand that I can still participate in other Bitcamp sponsored challenges.,Yes,We used the Fannie Mae data sets and the OpenMeteo API. We wrote our final program in Python.,University of Maryland College Park,,University of Maryland - College Park,3,Dakshita,Pal,dakshitapal902@gmail.com,Laura,Lai,jing.lauralai@gmail.com,Tulika,Kumar,tulikak13@gmail.com,,,,
vike,,Draft,Pending,Additional info,4/20/2024 18:14,"Inspiration

All of us are students who have been blessed with the fortunate opportunities given by modern technology. However, not everyone around the world has equal access to these gadgets that we take for granted. Realizing the need to address this issue, our team worked to create a budget friendly alternative to those unable to afford keyboards and mice. 

What it does

With nothing besides a laptop webcam and a piece of paper, we built a tool that is capable of replacing the computer mouse and keyboard by performing the same tasks at a small fraction of the price. Our project enables those unable to purchase certain technology appliances to have easy and convenient access to them wherever they go.

How we built it

Our project revolved around the use of computer vision. With the mouse, we tracked the location of the paper mouse as well as the movement of the pointer and middle finger, detecting a click whenever the finger went up and then back down onto the mouse. The keyboard was built with an on screen keyboard that could be interacted with by fingers. Each finger would have a round circle at the tips of each that would grow larger the closer it came to the camera, all enabled with the use of computer vision.

Challenges we ran into

While we initially planned to utilize a naive Mediapipe implementation and wrap up the computer vision aspect of the application within one day, this process ended up being a lot more grueling than expected. Mediapipe had issues when detecting the back of our hands versus the front of our hands, and we had no idea how to combat this. After a few hours of failed debugging, we ended up pivoting our entire approach and focusing on detecting contours with certain color values. This proved to be extremely valuable and helped us successfully implement our application shortly after.

Accomplishments that we're proud of

We’re proud of maintaining grit throughout the debugging process; there was one point halfway through the hackathon when we had considered restarting because nothing was working. However, we managed to clutch up, and we are happy with the end result! Additionally, while we are obviously proud of the application’s detection logic, our personal favorite aspect of the application is its frontend. It’s minimalistic yet functional, with a few hidden gems, and we thoroughly enjoyed creating it.

What we learned

The challenges we came across with using a naive Mediapipe implementation ended up forcing us to end up learning a lot more about restrictive color spaces, HSV format, and how contour detection can be used as a valuable heuristic for real object detection. These skills were critical to our success in developing the app.

What's next for Vike

We're hoping to merge both executables so that users can simultaneously use the virtual mouse and keyboard, which we believe would be a substantial improvement in the quality-of-life for programmers around the world.
",https://vike24.vercel.app/,,"Best First Time Hack - Bitcamp, Best Social Good Hack - Bitcamp, Best DEI Hack sponsored by Fidelity - MLH, Most Philanthropic Hack - Bloomberg","react, tailwindcss, firebase, opencv, mediapipe, python",Aryan,Sharma,aryan.sharma0714@gmail.com,,I don't want to submit to any Bitcamp track-specific challenges. I understand that I can still participate in other Bitcamp sponsored challenges.,Yes,"Our project focused mainly on computer vision which led to us using cv2 and Mediapipe a lot. Additionally, our project involved storing user data, which we did through the use of a Cloud Firestore database.",Centennial High School,N/A,"Centennial High School, Centennial",3,Victor,Liu,victorliu5000@gmail.com,Vinaykarthik,Vimalkumar,vinay7.karthik@gmail.com,Oliver,Leung,pixelesc.com@gmail.com,,,,
Debuggies,https://bitcamp2024.devpost.com/submissions/507677-debuggies,Submitted (Gallery/Visible),Pending,Submit,4/20/2024 18:15,"The battle with bugs in the computer science field is something faced by newbies and professionals alike. So, we took this literally by creating a game where a player must “fight” common programming bugs and “kill” them all. From NullPointerException bugs to StackOverFlowError bugs, you must keep your wits about you and effectively use tools like breakpoints to defeat hordes of enemies until you fully debug the battlefield. This game is not only fun and challenging, but it will also teach new programmers some of the most common errors, exceptions, and bugs that exist while programming in Java and introduce them to key functions of a debugger. 

Inspiration

As teaching assistants of a Java and C course at UMD, we often notice that students don’t like using the debugger to fix errors in their code. Most students don’t even know how to properly use a debugger and are afraid to learn, and so they will stick to inserting print statements. While this can be useful for easier assignments, using a debugger is often necessary for debugging projects that are more complex. Thus, we created the game “Debuggies” to illustrate the process of debugging in a fun, interactive manner. Through this game, we hope programming beginners will learn and recognize some common bugs in Java and see how useful and powerful a debugger can be. 

What it does

Our game creates a fast-paced real-time environment where players must constantly keep their wits about them to survive. All the enemies that the player will encounter represent common programming errors, or bugs, with their power reflecting how severe the error is. The player can shoot at these bugs to defeat them, but will quickly realize that simply shooting cannot stop this never-ending horde, so they must learn how important tools such as breakpoints (given throughout the game as abilities) are in their survival. These tools require that players can quickly and accurately identify errors in real-world code examples, creating an interactive way to not only develop one’s debugging skills, but also compete with friends while doing so. With the non-stop onslaught of enemies and bullets alike, players must learn how each bug is characterized, how to identify them in real-world code, and how to do all of this on the fly - or else risk certain death.

How we built it

Our game was built using the Java programming language in the Eclipse IDE, with the Slick2D graphics library. This season, we opted to use Java, as its object-oriented design intuitively allows for the building of large-scale systems while remaining convenient to divide into various independent systems for efficient (and fairly conflict-free) development. Everyone in our group was also familiar with Java coming into Bitcamp, giving us more time to challenge ourselves to build something we’ve never built before. 

To streamline our workflow, we used GitHub source control, and broke our project down into multiple independent systems that each of us could work on. This way, everyone could contribute equally while minimizing conflicts of code to allow for more efficient development. Throughout the course of our development we also heavily emphasized close collaboration so that everyone’s opinions could be taken into account before making any major decisions.

Challenges we ran into

Building a real-time game created a myriad of challenges, which began presenting themselves to us as early as a few hours into our development. As programmers who are not too familiar with game development, we had to go through a lot of trial and error, and many of our original systems (input, physics, rendering) had to be revised or overhauled as our project progressed and its needs became increasingly more complex. 

One notable example of this was with our physics engine. As the number of objects in our game increased into the hundreds, we found that our physics handler was not efficient enough to check for collisions in real-time. This forced a rewrite of our physics system from scratch, which took a lot of time.

Accomplishments that we're proud of

Our solutions to the needs of a real-time game are certainly not perfect, but they served as a wonderful introduction to these complexities that often go unnoticed. Being able to create a fully functional game together was an incredibly rewarding experience, and seeing our visions come together into a single fun yet practical product has been inspiring.

As a team, we’ve always wanted to build a complete game together, and we’re happy that we were able to see our vision come true at Bitcamp 2024.

What we learned

From working on this project, we’ve learned the important role planning plays in ensuring a smooth development process. During this hackathon, we took the liberty of planning a basic class structure for our program before starting to code, and we found that this led to fewer conflicts and the need for refactoring later. Had we not agreed on some sort of architecture before coding our program, our code certainly would have been a lot more disorganized and harder to work with.

We’ve also seen firsthand the importance of efficient algorithms. We know that inefficient algorithms take more time, but in the context of our program, these inefficiencies significantly influenced the rendering of our program. While developing our application, we’ve had multiple instances where we could visually see faster and more consistent results when we used more optimized algorithms.

What's next for Debuggies

After Bitcamp, we plan to add more content to Debuggies! Our work here has only just begun, and while we have some basic enemies, there’s a ton of potential for this game, both in terms of gameplay and educational value. For now, we plan to add more examples of code snippets and increase our variety of bugs. This will add more complexity to our game, making every playthrough more unique, while also giving players more information to learn from.

We also plan on expanding the game’s functionality by introducing different difficulty levels and connecting the game to a database so that high scores can be stored to encourage friendly competition between friends. 
",https://github.com/wendytu2022/Debuggies,,"Best Bitcamp Hack - Bitcamp, Best Gamification Hack - Bitcamp, Most Philanthropic Hack - Bloomberg, Best Financial Hack - Capital One,  Best Razzle Dazzle Hack - Bitcamp","java, eclipse",Shu-Ye,Lin,shuyelin06@gmail.com,,I don't want to submit to any Bitcamp track-specific challenges. I understand that I can still participate in other Bitcamp sponsored challenges.,Yes,The WiFi was great!,"University of Maryland, College Park",,University of Maryland - College Park,3,Anna,Dai,anna.dai916@gmail.com,Brian,Xie,bxie12@terpmail.umd.edu,Wendy,Tu,wendytu2022@gmail.com,,,,
Termbook,,Draft,Pending,Additional info,4/20/2024 18:50,"TermBook

Inspiration

Our team agreed journaling makes us feel better. From stress relief, to self reflection, to improved ability to communicate and express ourselves - the benefits of journaling are endless. But it can be very hard for busy developers to remember to journal, even if it would greatly benefit their mental health. 

What it does

Termbook is a complete journaling system to keep developers on the journaling journey. Each time you open your terminal - you will be prompted to enter a journal entry for the day (unless you already have). Our program will force you to write at least 50 words so you can unburden and reflect. You can then use a cloud based web app to view all your previous entries. You can use the github account you use every day with our service! We have fantatic docs and cross platform support so no matter who you are, you can get started journaling with us.

How we built it

We built the terminal aplication with Golang and the TUI framework bubbleTea. We built an api with golang to store the journals in a sqlite database and make them availble to our Next.js web app for easy viewing of your past journal entries. The web application was built with full user authentication and authorization in mind, as well as protected API routes for more security. 

Accomplishments that we're proud of

We are proud of the beautiful user experience we've created both on the web and in the terminal. We want our software to establish the relaxing, fufilling atmosphere of journaling.

Challenges we ran into

One challenge we ran into was working with Golang time stamps across the various platforms we support (mac, linux, windows). In some cases, the time stamps wouldn't match and caused strange bugs. Another issue was setting up authentication and securing next.js routes. We also spent a lot of time making sure our styling was just right.

What's next for Termbook

We would like add features like a streak tracker and better tooling for searching and and filtering through journal entries.
",https://www.termbook.co,,"Best Bitcamp Hack - Bitcamp, Best UI/UX Hack - Bitcamp, Best Domain Name from GoDaddy Registry - MLH","react, next.js, golang, sqlite, amazon-web-services, tailwind, css, bubbletea, lipgloss, nextauth, vercel",Brian,Bowers,bpb9629@gmail.com,,Best App Dev Track Hack - Bitcamp,Yes,We really enjoyed the simplicity and productivity of Golang and the seamless deployment experience of Next.js and Vercel.,Salisbury University,https://www.termbook.co,Salisbury University,1,Isaac,Dugan,isaacd4444@gmail.com,,,,,,,,,,
T.O.M. - Tabby of Motivation,https://bitcamp2024.devpost.com/submissions/507695-t-o-m-tabby-of-motivation,Submitted (Gallery/Visible),Pending,Submit,4/20/2024 18:57,"Inspiration

The primary inspiration behind T.O.M. was actually none other than our own lives as college students. With all the near-constant rushing and stress to make it to class, submit assignments on time, pass exams, and put out quality projects, there is little time left for us to catch our breath in between and admire our handiwork. Through T.O.M., we hope to encourage students, namely those in college, to give themselves a much-needed pat on the back every now and then and remind them that regardless of how hard things feel right now, they are doing great and are on track to achieve all their dreams and goals. 

What it does

At his core, T.O.M. is simple. When activated, he displays an encouraging message to the user and reads it aloud to them. By clicking him again, he will read you another encouraging message. (You may even hear one of his favorite cat-themed messages!) Despite this seemingly simple surface functionality, there is a multitude of design elements incorporated into the website design that enables T.O.M. to have the calming and encouraging presence we intended. The primary color of the website is a dark shade of olive green, a color that, for many, represents harmony, peace, and tranquility. T.O.M.’s bow is a bright shade of cream, which provides a pop of energy and inspiration to the viewer, as well as a visual contrast to the rest of the website. The top menu includes just three pages - the Home page, where you first meet T.O.M.; an About Us page where you have a chance to meet and connect with our team; and a Mission Statement page where you can view the vision for T.O.M. The simple design of our website enables even first-time users to easily access and meet T.O.M., and hear his many tabby words of wisdom.

How we built it

The entire project was built on Visual Studio Code, and mostly comprises HTML and CSS. There is also some embedded JavaScript, which was used on our text-to-speech and message selection functions. The completed application was deployed on Vercel through a GitHub repository.

Challenges we ran into

We ran into quite some challenges with UI development and figuring out the text-to-speech function of T.O.M. One unexpected challenge with UI development involved choosing the right color scheme for everything we wanted to include. At first, we planned on using a blue-and-orange color scheme, but this design was ultimately scrapped in favor of more calm and “less explosive” colors. The text-to-speech function of T.O.M. took quite some time to get working, given our limited experience with anything like it.

Accomplishments that we're proud of

We are most proud of the visual design of our website. Through the use of only a few theme colors and a simple, accessible layout with well-placed user interaction elements, we were able to create a relatively minimalist and intuitive layout for the user to navigate. We are also really proud of the new skills and techniques we’ve been able to pick up through the creation of this website. While these may not be the most advanced skillsets, many of the things we did were still things we’ve never done before on a website, and were a valuable step forward in our coding skills.

What we learned

The main thing that we learned through this project was how to create better and more advanced UI designs using HTML/CSS and Javascript. While we all had some experience with these languages, this project was a big step forward in terms of design and features from all the previous websites we’ve made. It was a bit of a hassle, particularly in the beginning, getting the initial skeleton of the website figured out, and we had to use a few CSS styles we were unfamiliar with. Another thing we learned was how to create and implement a text-to-speech feature for a website. None of us had prior experience in this, and it involved a lot of trial and error to get right.

What's next for T.O.M. - Tabby of Motivation

In the future, we look to expand the functionality of T.O.M. to be more than just a fun source of encouragement for users. By integrating a GPT model with T.O.M., we aim to allow him to generate schedules for college students based on parameters taken as input, such as the things they need to do in the day and how much time each thing should take. This will require significant JavaScript and Python usage, along with a full stack framework like Django, but it will broadly expand functionality of T.O.M. and enable him to become much more than just a talking tabby (though that function will definitely stay!).
",https://t-o-m-cat.vercel.app/,,"Best Bitcamp Hack - Bitcamp, Best First Time Hack - Bitcamp, People's Choice Hack - Bitcamp","html/css, javascript, github, vercel, vscode",Stephen,Wu,sswu2005@gmail.com,,Best App Dev Track Hack - Bitcamp,Yes,"Our experience with the technologies we used went fairly smoothly. There was a bit of difficulty at the beginning setting up collaboration through GitHub, but everything worked out in the end.",University of Maryland,,University of Maryland - College Park,2,Om,Arya,om.arya0577@gmail.com,Hasan,Ege,hege@terpmail.umd.edu,,,,,,,
Xfinity,https://bitcamp2024.devpost.com/submissions/507712-xfinity,Submitted (Gallery/Visible),Pending,Submit,4/20/2024 19:37,"Inspiration

University course catalogs are treasure troves of information crucial for students, faculty, and administrators. Unfortunately, this valuable data is often trapped within unwieldy, unstructured PDFs, making access and utilization challenging. 
Our mission is to liberate this data by extracting key elements and converting them into a structured, machine-readable format. Moreover, we're committed to developing a natural-language query interface for precise inquiries, ensuring users receive accurate answers with specific page and paragraph citations. 

What it does

Our project, Course Catalog Intelligence, pulls important information from university course catalog PDFs and lets you ask questions in plain language. It helps everyone at the university find what they need easier.

How we built it


Indexing: We first indexed the university course catalog PDFs using Langchain's tools. 
Data Modeling: We defined a data model for the extracted course information using Pydantic. This model, named Course, includes fields such as title, code, description, credit hours, and prerequisites. This ensures consistency and clarity in the structured data representation.
Generation: To generate answers to user queries, we implemented a generation pipeline. This pipeline consists of a prompt template, a language model (in this case, ChatOllama), and an output parser.


Challenges we ran into

To start, we initially used Azure AI Document Intelligence. It is a cloud-based service that leverages machine learning models to automate data processing within applications and workflows. 

Advantages of Azure AI Document Intelligence:


Efficient Data Extraction: Document Intelligence automates the extraction process, saving time and effort.
Customization: Create custom models to handle unique document layouts and formats.
Integration: Seamlessly integrate with your existing applications and workflows.
Structured Output: Receive structured JSON output, making it easy to work with the extracted data.
Custom Models and Classification Models: we created a custom model using OCR to retrieve fields in a structured manner. Unfortunately, this approach has some limitations:


Limitations Encountered:


Training Page Limit: You mentioned that the training is limited to one page. This constraint can be challenging when dealing with longer documents.
OCR Limitations: Using OCR (Optical Character Recognition) is restricted to a single page, and consistency issues may arise across files.
Testing Variability: The testing process didn’t remain consistent across different files, which can impact reliability.


Accomplishments that we're proud of

Llama3 was released 3 days ago and we were able to leverage the model in our application!

We take immense pride in not only achieving our objectives but also in the learning trajectory that this project offers.

What's next for Xfinity

With a successful prototype in place, we are enthusiastic about expanding our model's horizon. We aim to integrate more diverse datasets, such as responses in the healthcare industry, and apply them to more industry problems. 
",https://github.com/sprihajha/bitcamp2024,,"Best Bitcamp Hack - Bitcamp, Best UI/UX Hack - Bitcamp, Best Moonshot Hack - Bitcamp, Best Social Good Hack - Bitcamp, People's Choice Hack - Bitcamp, Best DEI Hack sponsored by Fidelity - MLH, University Course Catalog Data Extraction and Query Challenge - Xficient","llama3, rag, langsmith, langchain, python, flask, git, github",Spriha ,Jha,jha.spriha@gmail.com,,Best Machine Learning Track Hack - Bitcamp,Yes,"Langchain: Working with Langchain's tools, including text splitter, vector stores, and embeddings, was crucial for indexing and processing the course catalog PDFs. The documentation and examples provided were helpful in understanding how to integrate these tools into our project.

Azure Document Intelligence: We also explored Azure Document Intelligence for its capabilities in processing and extracting information from documents. Although we ultimately chose Langchain for our solution, Azure Document Intelligence offered robust features and integration options that we found valuable during our exploration phase.

Pydantic: We utilized Pydantic to define the data model for the extracted course information. Its simplicity and ease of use allowed us to quickly define the structure of our data and ensure its consistency.

ChatOllama: Implementing ChatOllama for natural language generation was an interesting experience. It provided us with a powerful language model to generate responses to user queries. However, fine-tuning the model's parameters to optimize performance could be challenging at times.

Llama3: We also experimented with Llama3 for language modeling, which offered advanced capabilities in generating responses to user queries. Its integration with our project provided additional flexibility and options for natural language processing tasks.

GitHub: GitHub served as our primary version control and collaboration platform throughout the hackathon. Its familiar interface and seamless integration with our workflow allowed for efficient code management and collaboration among team members.","University of the District of Columbia, New York University",,"New York University, University of the District of Columbia",1,Ronald,Ngounou,landryzinkoue@yahoo.fr,,,,,,,,,,
Facial Recognition Security System,https://bitcamp2024.devpost.com/submissions/507727-facial-recognition-security-system,Submitted (Gallery/Visible),Pending,Submit,4/20/2024 20:13,"meow meow meow

Inspiration

What it does

How we built it

Challenges we ran into

Accomplishments that we're proud of

What we learned

What's next for Facial Recognition Security System
",,,,"colab, python, mediapipe, numpy, pillow, scipy, matplotlib, opencv, machine-learning, computer-vision, javascript",David,Liu,davidjinliu@gmail.com,,Best Machine Learning Track Hack - Bitcamp,Yes,meow,University of Maryland,,University of Maryland - College Park,0,,,,,,,,,,,,,
PeerSphere,,Draft,Pending,Project overview,4/20/2024 20:16,,,,,,Joseph,Cho,joseph.cho20@gmail.com,,,,,,,University of Maryland - College Park,3,Aadit,Nilay,aadit@terpmail.umd.edu,akshitab26,Badkundri,akshitab@umd.edu,arnavaggarwal75,Aggarwal,arnavaggarwal907@gmail.com,,,,
StructSure,https://bitcamp2024.devpost.com/submissions/507730-structsure,Submitted (Gallery/Visible),Pending,Submit,4/20/2024 20:16,"Inspiration

With the recent collapse of the Francis Scott Key Bridge, we were excited about the opportunity to use the hackathon to assist with reparations on the bridge.  

What it does

It analyzes images, and identifies zones of critical damage, and zones of least critical damage.

How we built it

We built it using Microsoft Azure, Vercel, JavaScript, React, Next.js, Node.js, and Vercel

Challenges we ran into

Training the AI model with Azure Custom Vision. 

Accomplishments that we're proud of

What we learned

How machine learning training works with images.

What's next for StructSure
",https://github.com/6rm6n/BItcamp24,,"Best Bitcamp Hack - Bitcamp, Best Social Good Hack - Bitcamp, Best use of AI/ML Innovation for the Francis Scott Key Bridge Recovery Efforts - Cloudforce","javascript, react, azure, next.js, node.js, vercel",Arman,Mahjoor,amahjoor@gmu.edu,,Best Machine Learning Track Hack - Bitcamp,Yes,Microsoft Azure - it was awesome playing with the free Student Plan.,George Mason University,,George Mason University,1,Joshua,Cancio,jd.cancio1@gmail.com,,,,,,,,,,
FinHack,,Draft,Pending,Additional info,4/20/2024 20:19,"Inspiration

The capital one paper that was handed out from the sponsor stands

What it does

Gives you the definition of the word button that is pressed

How we built it

Eclipse IDE then into replit

Challenges we ran into

Changing the font and alignment of the definitions which we still wasnt able to figure out

Accomplishments that we're proud of

Having the app working with the buttons and the display area

What's next for FinHack

A cleaner version where we have a menu screen, and the layout is more polished and maybe even animations for buttons and the definitions when they show up
",https://replit.com/@lycanrocks1/Bitcamp,,,java,Alex,Yeh,lycanrocks1@gmail.com,,Best App Dev Track Hack - Bitcamp,No,"It was amazing to see the new people and friends, also i was able to learn and tap into a new language while working on this project which served as a learning experience and challenge",Baltimore Polytechnic Institute,NO!,baltimore poly tech,0,,,,,,,,,,,,,
StudyHub,,Draft,Pending,Manage team,4/20/2024 20:21,"Inspiration

As

What it does

How we built it

Challenges we ran into

Accomplishments that we're proud of

What we learned

What's next for Untitled
",,,,,chunk2,Mehta,lmml8335@gmail.com,,,,,,,Winston Churchill High School,2,very good player,Li,jiajakeli2123@gmail.com,Alan,Wang,ninety9tencups@gmail.com,,,,,,,
Untitled,,Draft,Pending,Manage team,4/20/2024 20:26,,,,,,Sahit,Kadthala,skadthala@yahoo.com,,,,,,,,0,,,,,,,,,,,,,
MediCheck AI,https://bitcamp2024.devpost.com/submissions/507740-medicheck-ai,Submitted (Gallery/Visible),Pending,Submit,4/20/2024 20:27,"Inspiration

The inspiration for MediCheck AI stems from a deep-seated concern for healthcare disparities and a firm belief in the power of technology to address them. In many parts of the world, access to quality healthcare is not readily available, particularly in underserved and remote areas. Patients in these regions often face significant challenges in obtaining timely medical attention and diagnoses due to various factors such as limited healthcare infrastructure, shortage of medical professionals, and lack of internet access.

The idea was born from a desire to leverage advancements in artificial intelligence and web technologies to provide preliminary medical assessments and guidance, even in the most remote and resource-constrained environments.

The MedLLaMa2 model represents the culmination of existing technology with immense potential to revolutionize healthcare. As an AI-powered diagnostic tool, MedLLaMa2 leverages state-of-the-art machine-learning techniques to analyze medical data and provide preliminary diagnoses.

What it does

Our project is called MediCheck AI. MediCheck AI consists of a few parts: the front-end and the AI-powered back-end.

The front end of MediCheck AI is designed to be user-friendly and visually appealing, providing a seamless experience for both healthcare professionals and patients. Users can easily input surface-level patient information, symptoms, medical history, and lifestyle factors through the website using intuitive forms and interfaces.

Upon submitting the necessary information, the data is securely transmitted to the AI-powered backend for analysis. The backend of MediCheck AI is where the magic happens. It comprises an advanced AI model named MedLLaMa2, trained on a vast dataset of medical examination questions and corresponding diagnoses.

One of the critical features of MediCheck AI is its ability to run locally on affordable embedded systems, such as the Raspberry Pi 5. This local AI implementation using the MedLLaMa2 model ensures accessibility and reliability even in areas with limited internet connectivity, making it particularly valuable for underserved communities.

How we built it

For the front-end of our website, we utilized HTML to create a user-friendly interface where patients can input information about their symptoms, medical history, and lifestyle habits. We incorporated radio buttons and text fields, allowing users to select options or type in relevant details. Additionally, CSS was employed to enhance the visual appeal and layout of the website, ensuring a seamless and engaging user experience.

On the backend, we employed Flask, a Python module for building simple website interactions, to collect the information entered by the patient on the website. Once the patient submits their information and Flask has retrieved it, the Ollama API passes the info to MedLLaMa2, and the language model processes the data and generates an input using the extracted information.

MedLLaMa2 is an advanced language model (forked from Meta’s LLaMa2 model) trained on a vast dataset of medical queries and corresponding diagnoses. It utilizes state-of-the-art natural language processing techniques to analyze the input data and generate an appropriate diagnosis based on the parameters provided. Once MedLLaMa2 processes the input, it responds with the suggested diagnosis.

Challenges we ran into

Version Control - We were working on slightly different versions of the same codebase at several points, making coordinating more challenging. 

Setting up the code environment – When we were deciding what tools to use, we tried Django instead of Flask. We ran into many issues with project configuration. We ended up using Flask for this reason.

Accomplishments that we're proud of

Since the AI model is self-hosted, we were able to implement an application that requires no internet connection. We created an attractive-looking user interface implementing features such as a dark mode and mandatory fields for users to input data. 

What we learned

When designing the application, we were able to familiarize ourselves with web development languages such as HTML, JavaScript, and CSS and develop our knowledge even further. We also learned how to use Flask to create a function that formats the patient’s information into a prompt and sends it to the LLM. 

What's next for MediCheck AI

We could release updates to our application in the future. As of right now, our application gives a diagnosis for the patient. Based on the diagnosis, we could incorporate a feature to recommend the patient to different healthcare professionals. For example, the AI could recommend potential dermatologists if a client is concerned about his dry scalp. When we implement this feature, we need to consider new details such as location and healthcare professional rating to recommend the best possible doctor for the patient’s needs.
",https://github.com/mayitreya/medicheck_ai,https://youtu.be/fgg9zzf1R_A,"Best Bitcamp Hack - Bitcamp, Best First Time Hack - Bitcamp, Best Social Good Hack - Bitcamp","python, html, css, javascript, github, vscode, ollama",Rahul,Ramasubramanian,rahul24@terpmail.umd.edu,,Best Machine Learning Track Hack - Bitcamp,No,"We used GitHub after struggling to coordinate through other means, which made it easier to manage different versions of the codebase. We also used Flask (a Python library) to write a function that formats the patients' information and feeds it to the LLM. The LLM itself is called MedLLaMa2, which is a fork of Meta's open-source LLaMa2 model. MedLLaMa2 itself is specifically trained on over 10,000 medical examination questions, which is perfect for our case.",University of Maryland College Park,,University of Maryland - College Park,3,Dave,Jose,davedeepujose@gmail.com,Shiven,Chokshi,shiven.chokshi@gmail.com,Mayitreya,Pasumarthy,mayitreya2004@gmail.com,,,,
LivePresence,,Draft,Pending,Additional info,4/20/2024 20:28,"Inspiration

a

What it does

How we built it

Challenges we ran into

Accomplishments that we're proud of

What we learned

What's next for a
",https://github.com/Fredswqa190/BitCamp2024Submission-LivePresence,," Best Hardware Hack - Bitcamp, Best Bitcamp Hack - Bitcamp, Best First Time Hack - Bitcamp, Best Domain Name from GoDaddy Registry - MLH","python, typescript",Fredswqa190,Han,yhan84273@gmail.com,,Best Advanced Quantum Track Hack,Yes,"We learned significantly more than we ever expected to in this short 36-hour stay. Between building our team up from the ground, to troubleshooting ESP32 errors, to figuring out how flask works, we've been through it all.","Princeton University, University of Maryland",livepresence.co - Highly applicable to our project. We created an AI backed home intrusion detection algorithm using Quantum Convolutional Neural Networks..,"new hyde park memorial high school, Rockville High School, University of Maryland - College Park",2,Stephy,,stephyzhang2006@gmail.com,Amin,Boukari,ambouk3@gmail.com,,,,,,,
Ransomify,,Draft,Pending,Project overview,4/20/2024 20:31,,,,"Best First Time Hack - Bitcamp, People's Choice Hack - Bitcamp",,Justin,Chai,justinbchai@gmail.com,,I don't want to submit to any Bitcamp track-specific challenges. I understand that I can still participate in other Bitcamp sponsored challenges.,Yes,,University of Maryland: College Park,,University of Maryland - College Park,0,,,,,,,,,,,,,
Untitled,,Draft,Pending,Manage team,4/20/2024 20:32,,,,,,Mark,Schweitzer,markdanielschweitzer@gmail.com,,,,,,,,0,,,,,,,,,,,,,
test,https://bitcamp2024.devpost.com/submissions/507759-test,Submitted (Gallery/Visible),Pending,Submit,4/20/2024 20:59,"Inspiration

test

What it does

test

How we built it

test

Challenges we ran into

test

Accomplishments that we're proud of

test

What we learned

test

What's next for Address Gun Violence In Schools In DC

test
",,https://youtu.be/hOELcD_h7Yo?si=cIQ227JseipAre8_,"Best First Time Hack - Bitcamp, Best Social Good Hack - Bitcamp","flutter, dart, esri, android",sgubba1,Gubba,sgubba15@gmail.com,,Best App Dev Track Hack - Bitcamp,Yes,The experience was great. We got support from different mentors and learned a lot.,"University of Maryland, College Park",,University of Maryland - College Park,0,,,,,,,,,,,,,
Vistra - The Mirror for Everyone,https://bitcamp2024.devpost.com/submissions/507772-vistra-the-mirror-for-everyone,Submitted (Gallery/Visible),Pending,Submit,4/20/2024 21:12,"Inspiration

Over 1.3 billion people around the world suffer from significant physical disabilities, and our goal is to make technology more accessible to them. From stroke victims and individuals with arthritis who struggle to use touch screen devices to those with amputations and birth defects, there is a need for innovative solutions that empower people with disabilities to fully engage with modern technology. Inspired by the desire to bridge this gap and improve the quality of life for everyone, we decided to create Vistra, a groundbreaking smart mirror accessibility aid.

What it does

Vistra is designed to cater to the diverse needs and abilities of individuals with disabilities, offering a range of features and functionalities that allow for seamless interaction. For individuals with limited mobility, Vistra's hands-free interface provides an accessible alternative to traditional touch screen devices, allowing users to navigate through menus, access information, and perform tasks with ease. By utilizing advanced eye-tracking technology, Vistra enables users to control the interface simply by moving their eyes, eliminating the need for complex gestures or precise movements.

How we built it

The development of Vistra involved research into the needs of individuals with disabilities, followed by iterative design and testing of the user interface. We integrated eye-tracking technology into the mirror and optimized performance through calibration and testing. 

Challenges we ran into

The first challenge we ran into was running all of the processes at the same time. 
Getting the live data from GazeTracker and accurate datapoints was a challenge.
Applying the mirror film over the monitor was also tricky, taking multiple team members and attention to detail for optimal results.

Accomplishments that we're proud of

We developed an idea, as well as technology that could very well be used in the real world. Vistra is a tool that is accessible with only your eyes and will be completely hands-free. This technology could revolutionize the way we control apps in our daily lives, and empower individuals with physical limitations. Additionally, the collaborative effort that went into developing our project has been incredibly rewarding, with each team member contributing their own skills and expertise.

What we learned

Developing Vistra has taught us valuable lessons about the importance of empathy, inclusivity, and user-centered design. By prioritizing the needs and experiences of individuals with disabilities, we were able to create a more accessible and effective product. We also learned how emerging technologies like eye-tracking can be used to improve accessibility and enhance the quality of life for EVERYONE.

What's next for Vistra

• Fine-tuning eye-tracking and achieving 100% accuracy
• Obtaining a glass two-way mirror and frame for enhanced visibility and visual appeal
• Improving UI
• Adding options for customization
",https://github.com/ahere84/Vistra-Smart-Mirror,https://youtube.com/shorts/wjHxAu6g3js?feature=share," Best Hardware Hack - Bitcamp, Best First Time Hack - Bitcamp, Best Social Good Hack - Bitcamp","python, javascript, html, gazeflow, openweathermap, spotify, gazerecorder",Andy,Heredia,andyheredia599@gmail.com,,Best Machine Learning Track Hack - Bitcamp,Yes,"GazeRecorder is good, but the recalibration could be faster. If we were to implement our own, we would cut down calibration time or have no calibration at all. Some people wanted to demo but didn't want to wait to calibrate.",Montgomery College,,Montgomery College,2,Yonatan,Tussa,ytussa@montgomerycollege.edu,Melvin,Sere,seremelvin1@gmail.com,,,,,,,
Remorize,,Draft,Pending,Additional info,4/20/2024 21:13,"Inspiration

Having to note down and memorize everything in your day is a tedious task and creates a chance for miscommunication and misunderstanding, thus came the utility for remorize where we handle all your daily audio data to simplify your day.

What it does

Remorize is an end-to-end platform that uses a mini mic to track your daily audio activity to automate and simplify your life in these ways:

Hourly notes / action items list

Remorize creates an hourly dashboard for your audio as notes and action items to complete in your day

Google Calendar integration

Remorize automatically adds any discussed event to your Google Calendar to keep you in track

Email drafts

Remorize prepares an email draft for you based on the audio context to copy and modify as per your requirements.

How I built it


Mobile Frontend : Android Studio, Java and Speech Recognition API
Server : Python, GPT-4, Flask, APScheduler, ngrok
Web Frontend : Next.js, React.js, TailwindCSS, ReactMarkdown
Database : SQLite, DB Browser - sqlite


Challenges I ran into


Making sure the LLM does not hallucinate by using precise prompt engineering
Setting up the mini microphone as an audio device


Accomplishments that I'm proud of


Setting up the entire audio-to-text pipeline via the user's phone as a gateway to the server
Making a seamless backend infrastructure to create notes, action items and setting up calendar events
Making all of these features in <36 hours


What I learned


API and microservices architecture
Database management using sqlite


What's next for Remorize


*Enhanced Speech Recognition *: We aim to improve the accuracy and responsiveness of the speech recognition system by integrating more advanced AI models. This will help in better understanding diverse accents and dialects.
Offline Capabilities : We plan to develop offline functionalities that will allow users to access features of Remorize without an internet connection, making it more versatile in various settings.

",,,"Best Bitcamp Hack - Bitcamp, Best Moonshot Hack - Bitcamp","android-studio, java, speechrecognition, python, gpt, flask, ngrok, nextjs, react, tailwind, reactmarkdown, sqlite",Advay,Choudhury,adgoch11@gmail.com,,Best App Dev Track Hack - Bitcamp,Yes,"This weekend at the hackathon, I had the opportunity to work with a range of technologies, including Android Studio, Flask, SQLite, and GPT-4, each integral to the development of our project. 
Android Studio offered a robust platform for mobile app development, although the setup can be quite resource-intensive which might challenge newer devices. 
Flask was great for quickly setting up our backend server, providing simplicity and flexibility, though it sometimes lacks the out-of-the-box functionalities that larger frameworks offer. 
SQLite served well for our database needs, offering lightweight and easy setup; however, managing complex queries and scalability can be tricky. 
Working with GPT-4 was enlightening, particularly for generating responsive text from audio; nonetheless, prompt engineering to prevent hallucination required careful handling and deeper understanding of model capabilities. 
Overall, each technology contributed significantly to our project, enhancing both functionality and my personal skill set.",University of Maryland - College Park,,University of Maryland - College Park,0,,,,,,,,,,,,,
Lockness AI,,Draft,Pending,Additional info,4/20/2024 21:25,"Inspiration

The Chronic Condition Warehouse (CCW) Virtual Research Data Center (VRDC) is the US government's central collection of ALL public healthcare records. Scientists, researchers, and policy makers regularly use this data for studies and policy recommendations. The VRDC is HIGHLY secure and restrictive (as it should be), and is comprised of thousands of tables (each with up to hundreds of columns). The problem is the documentation for the data structure in VRDC CCW is highly technical and dense, filled with cryptic codes and abbreviations, dispersed among hundreds of pages of PDFs. Even a simple query can cost several thousand dollars, easily ballooning a comprehensive study to the 6-figure range. This can be remedied by the power of generative AI, hosted in a private, secure environment.

What it does

We made a (self-hostable) chat application where VRDC researchers can generate complex queries based on research questions in seconds. By automating the process of parsing hundreds of pages of documentation, we improve the efficiency of researchers dramatically. Unlike general code-generation solutions, we take the approach that LLMs are here to automate mundane tasks, but intelligence ultimately lies in the hands of the user. This empowers the user to provide context and necessary corrections to the LLM along the way, eliminating hallucinations and other common errors produced by LLMs. Here's how it works: First, the user inputs a research question. Next, the LLM asks the user for any clarifications/domain expertise necessary to properly build the query. Once sufficient context is supplied, the app provides a full plain-English outline of the query generation plan. Once the user is satisfied with the outline, the LLM generates the query step-by-step, following the outline, asking for user feedback along the way. Finally, the query is concatenated and aggregated for a final result. At every step of the way in the iterative development, the user has the power to clarify and fix any errors that the LLM might introduce. The end result is a fully-functional query and hours saved for the researcher.

How we built it

After unanimously agreeing on the logical flow and design for the application, we split into two sub-teams. Ryan and Michael worked on data aggregation for the documentation, as well as prompt engineering and chaining to make the LLM pipeline. UV and Jason created on the frontend and backend architecture for the website. Since we want to make this application deployable to offline/restricted environments, we built our LLM solutions using Cohere's self-hostable Command-R-Plus model. We also used Google Cloud App Engine to host our Flask backend, and Vercel to statically host our React + Chakra UI frontend.

Challenges we ran into

LLMs are stubborn and getting them to cooperate and obey every command can be difficult. This is especially true when trying to ask for formatted output (ie: JSON). Setting up the architecture to enable chat-streaming was a challenge, as well as state-management for different message types. Finally, connecting the LLM pipeline to the frontend was a bit difficult because of diverging features that were and weren't implemented. We figured everything out in the end!

Accomplishments that we're proud of

The UI is very intuitive, professional, and elegant. Furthermore, the core LLM pipeline is impressively robust and accurate. We are confident that we can scale this solution to production, and if used by researchers, can save organizations and the American tax-payer millions of dollars collectively.

What we learned

We learned a lot about LLMs, how to prompt them, how to work with open-sourced LLMs, how to run them in a real app in real time. We also learned a lot about US healthcare infrastructure and standard data codes and formats, especially related to VRDC.

What's next for Lockness AI

We plan to add documentation ingress, to fully automate the process of teaching Lockness AI about the user's data system. We also plan to enhance our LLM pipeline through fine-tuning, using retrieval augmented generation (RAG), using additional specialist models, function calling, and adding the support for web search (for environments that can support external calls). Additionally, we plan to create a simple setup process for research agencies interested in self-hosting our product.
",https://locknessai.com,,"Best Bitcamp Hack - Bitcamp, Best Domain Name from GoDaddy Registry - MLH, Best AI Powered Solution for Defense Contracts - Bloomberg Industry Group","python, react.js, flask, cohere, groq, llama-3, chakra-ui, google-cloud, vercel, pandas",Yuvan,Sundrani,yuvan.sundrani@gmail.com,,Best Machine Learning Track Hack - Bitcamp,Yes,"Our tech stack utilized React.js, Python/Flask, Git, Pandas, and open-source AI models like llama-3 and Groq chat. The final product integrated Cohere AI's models.","University Of Maryland, College Park",locknessai.com,University of Maryland - College Park,3,jsteinberg7,,j.steinberg702@gmail.com,Michael,Ilie,mcilieg@gmail.com,ryancwmd,Whittaker,ryancwmd@gmail.com,,,,
AI-Driven Defense Contract Insights,https://bitcamp2024.devpost.com/submissions/507786-ai-driven-defense-contract-insights,Submitted (Gallery/Visible),Pending,Submit,4/20/2024 21:29,"Inspiration

The Department of Defense is one of the biggest investors in the world, so we wanted to extract valuable information from their contracts so that the DoD and the contractors make informed decisions and promote transparency among the people. 

What it does

The project uses generative AI to extract relevant information from the Department of Defense contracts.

How we built it


Web-scraped the contracts present on the https://www.defense.gov/News/Contracts website using Python's BeautifulSoup library for HTML parsing.
Extracted these contracts into a JSON format using the Gemini API. 
Tabulated the JSON string into a CSV file.
Classified the type of work in the contract.
Visualized and highlighted insights such as the locations where most Department of Defense (DoD) projects are taking place, the mean cost per contracting company, and the domains to which the projects belong.


Challenges we ran into

We ran into a hurdle while testing the accuracy of data extracted from contracts as there are very few tools or methods. We came up with the approach of vectorizing the data to create a RAG Stack but we faced challenges like creating chunks. Subsequently, we came up with the idea of testing by comparing the insights generated using the extracted data with Domain Knowledge.

Accomplishments that we're proud of


Integration of generative AI in our project to tabulate defense contracts.
Classification of contracts into different fields (Maintenance, Manufacturing) based on their purpose. 


What we learned


The use and integration of OpenAI API and Gemini AI.
Extracting data through websites.
How Domain Knowledge can be used to test and validate data.
How to visualize data using Tableau.


What's next for AI-Driven Defense Contract Insights

To create an inverted index search engine and implement a generative AI chat model to search through it effectively. 
",https://github.com/anjaneyak10/Hackathon.git,,Best AI Powered Solution for Defense Contracts - Bloomberg Industry Group,"python, tableau, excel, openai, geminiai, google.generativeai",Jayesh Jairaj,Pamnani,jpamnani@umd.edu,,Best Machine Learning Track Hack - Bitcamp,Yes,"1) It was great working with Gemini API to get prompt responses.
2) We tried to implement RAG Stack but it was difficult to create chunks so we shifted our approach.",University of Maryland - College Park,,University of Maryland - College Park,2,Anjaneya Sanjay,Ketkar,aketkar@umd.edu,Janesh,Hasija,jhasija95@gmail.com,,,,,,,
Message in a Bottle,,Draft,Pending,Manage team,4/20/2024 21:38,,,,,,Jay,Rana,jay.rana1@gmail.com,,,,,,,,0,,,,,,,,,,,,,
Untitled,,Draft,Pending,Manage team,4/20/2024 21:38,,,,,,Lakshya,Sajal Kumar,lakshyaa@terpmail.umd.edu,,,,,,,University of Maryland - College Park,0,,,,,,,,,,,,,
Untitled,,Draft,Pending,Manage team,4/20/2024 21:44,,,,,,Manasvi,Hosahalli,mh110704@terpmail.umd.edu,,,,,,,University of Maryland - College Park,0,,,,,,,,,,,,,
ResQVision,,Draft,Pending,Project overview,4/20/2024 21:47,,https://github.com/NSP909/cmdfmydebris,,"Best Bitcamp Hack - Bitcamp, Best Social Good Hack - Bitcamp, Best Sustainability Hack - Bitcamp, Best Domain Name from GoDaddy Registry - MLH, Best use of AI/ML Innovation for the Francis Scott Key Bridge Recovery Efforts - Cloudforce, Best Use of APIs related to Housing/Climate Change - Fannie Mae, Best Financial Hack - Capital One","python, html, css, javascript, node.js, flask, react",Anuraag,Tripathy,anuraagstudy@gmail.com,,Best Machine Learning Track Hack - Bitcamp,Yes,,"University of Maryland, College Park",,University of Maryland - College Park,1,Priyadarshan,Narayanasamy,nspriyadarshan@gmail.com,,,,,,,,,,
BuildKey AI,https://bitcamp2024.devpost.com/submissions/507804-buildkey-ai,Submitted (Gallery/Visible),Pending,Submit,4/20/2024 21:58,"Inspiration

After interviewing the police, emergency medical & fire-fight staff personnel at the BitCamp event. The main problem was data access and friction in decision-making. Such fieldOps teams have lot of data that is scattered in their repositories. If I could train a custom GPT with their data, it could help them with answers to queries vs links. Helping teams with efficiency (low search time) and improved decision-making. Thus helping them serve to save lives and property. 

What it does

Fetches/summerizes mission-critical information within seconds. Supports multi-lingual queries. Provide real-time traffic maps all in one place!

How we built it

We have used: LangChain, OpenAI GPT APIs, Azure App service, Astro (UI), Streamlit

Challenges we ran into

Gathering data was a huge pain-point, as there was no dataset available for such a recent event.

Accomplishments that we're proud of

A RAG-based system to answer within context. Renders real-time traffic maps. Supports multilingual languages for natural language based queries.

What we learned

Azure Copilot, Azure AI search.

What's next for BuildKey AI

Handle Images and video to get insights.
","https://github.com/urstrulykkr/BuildKey-AI/tree/main, https://build-key-ai.vercel.app/",,"Best First Time Hack - Bitcamp, Best use of AI/ML Innovation for the Francis Scott Key Bridge Recovery Efforts - Cloudforce, Most Philanthropic Hack - Bloomberg","python, azure, streamlit, github, astro, openai, ai, ml",Kaushik Reddy,Kanumuru,kkaushik@umd.edu,,Best Machine Learning Track Hack - Bitcamp,Yes,Azure AI was really cool!,University of Maryland,,University of Maryland - College Park,0,,,,,,,,,,,,,
Untitled,,Draft,Pending,Manage team,4/20/2024 22:04,,,,,,Bryan,Gao,brybryboi215@gmail.com,,,,,,,University of Maryland - College Park,0,,,,,,,,,,,,,
Miami: HPI vs Annual Rainfall,https://bitcamp2024.devpost.com/submissions/507810-miami-hpi-vs-annual-rainfall,Submitted (Gallery/Visible),Pending,Submit,4/20/2024 22:11,"Inspiration

We recognize that climate change is a huge problem and wanted to see how fluctuations in the rainfall in a city affect the prices for living environments. We chose Miami in particular because of how prone it is to frequent rainfall. 

What it does

Our project is an attempt at understanding if any correlation exists between the annual average rainfall and the Housing Price Index in Miami-Dade County. 

How we built it

We used pandas to classify the variables in the datasets with their ordinal correspondents and to clean the merged dataset. We used R to run an ordinal logistic regression and interpret the results. 

Challenges we ran into

Connecting and merging datasets for annual rainfall and housing price index for a county in Miami. 

Accomplishments that we're proud of

We were able to find common data points and successfully remove any outliers from the datasets we obtained from credible sources online. 

What we learned

We learnt from our results that two factors may be related to each other but they do not necessarily have to be the reason for the occurence of one another. However, this does not mean that the relationship does not truly existed, it just cannot be inferred directly through our methods. 

What's next for Miami: HPI vs Annual Rainfall

We hope to gather more data points and focus more on other climatic conditions that stem from climate change (tornadoes, hurricanes, drought, flood) that affect major cities of the United States. We hope to turn our results into an interactive space for users to predict and understand what their investments in properties in a given region could look like in the future. 
",https://github.com/arshnoor08/HPI-Rainfall_Analysis_Miami-Dade,,,"r, python",Arshnoor,Bhutani,arshnoor@terpmail.umd.edu,,I don't want to submit to any Bitcamp track-specific challenges. I understand that I can still participate in other Bitcamp sponsored challenges.,Yes,"We relied on Posit Cloud for most of our analysis in R. This IDE was available to us entirely online i.e. a desktop version was not required to access additional features. However, the collaborative feature on Posit Cloud was lagging which prompted us to export and share the files with each other to work collaboratively.","University of Maryland, College Park",,University of Maryland - College Park,3,Manya,Garg,mgarg@terpmail.umd.edu,Kashvi,Agarwal,kashvi27.agarwal@gmail.com,mahek,,mahek@umd.edu,,,,
UMD Foodies,https://bitcamp2024.devpost.com/submissions/507812-umd-foodies,Submitted (Gallery/Visible),Pending,Submit,4/20/2024 22:12,"Inspiration

One of our team members loves to go to free food events on campus. She sifts through flyers and emails, but has no way to keep track of all the details in one place. She loves sharing free food events with her friends because as upperclassmen, she understands that everyone might be sick of dining hall food or too tired to cook after a long day of class.

What it does

UMD Foodies provides a way for students to stay updated on all the food events happening on campus. With a user-friendly interface, it aggregates event details like date, time, location, and food offerings. Users can easily browse and add events, enhancing the campus dining experience.

How we built it

We built UMD Foodies using React Native for cross-platform compatibility, Google Maps SDK for the map of campus with pin points of free food locations, and Firebase for real-time data storage.

Challenges we ran into

Navigating React for the first time presented a steep learning curve, consuming nearly four hours just to set up and troubleshoot issues because of superuser permissions and deprecated content. Transitioning from HTML/CSS meant adapting to React's structure, with tasks taking significantly longer than anticipated. For example, what would take us 10 minutes became 1 hour. We experienced compatibility issues when using libraries that did not support both web and mobile platforms. Integrating Google Maps proved tricky because the location kept defaulting to a California location. Additionally, we struggled with integrating a database because we wanted to use MongoDB, but that was more complex than anticipated, leading to a pivot towards Firebase. 

Accomplishments that we're proud of

Samar is proud of implementing the map feature, drawing upon skills honed in CMSC436. Sheldon is proud of his breakthrough moment when he managed to change the font after spending way too long on it. Angelyn is proud of when she managed to integrate Firebase after going in circles with MongoDB. Collectively, we are proud to have learned React Native in a short period of time, delivering a product that has the potential to enhance students' experiences.

What we learned

Sheldon learned how to integrate a calendar with events using React, Samar learned how to integrate Google Maps SDK in the context of React, and Angelyn learned how to use Firebase and started to memorize the commands for Git. We all learned how to use React and embraced the perseverance required to overcome initial hurdles. Despite challenges, Sheldon's determination fueled our progress until React setup success.

What's next for UMD Foodies

We want to enrich UMD Foodies with social features, enabling users to add and invite friends to foodie events seamlessly. Additionally, we want to integrate email parsing capabilities to automatically populate the database with events containing terms like ""free food"". These enhancements will further streamline event discovery and social interaction within the app.
",https://github.com/sheldoug/umd_foodie_app,,"Best Bitcamp Hack - Bitcamp, Best Social Good Hack - Bitcamp, People's Choice Hack - Bitcamp","react-native, firebase, google-maps, javascript, github, git, react, expo.io",Angelyn,Pham,angpham@terpmail.umd.edu,,I don't want to submit to any Bitcamp track-specific challenges. I understand that I can still participate in other Bitcamp sponsored challenges.,Yes,"React Native: there was a learning curve associated with it, especially during set up which left us frustrated during the beginning. eventually, we got past the setup stage, and things were moving better
MongoDB: we tried to connect to our app using MongoDB, but we didn't want to dive into Express/Node.js, so after looking around, we found that Firebase was a better choice given our time constraint
Firebase: this database was a lot simpler to set up than MongoDB, and it integrated smoothly with React
Google Maps SDK: it took some time to figure out how to integrate with React, and it seemed to remove the website portion of our project (we wanted it to be cross-platform). 
GitHub/Git: it made sharing this project with each other a lot easier, and it was a good skill to practice","University of Maryland, College Park",,University of Maryland - College Park,2,Sheldon,Douglas,sheldoug19@gmail.com,Samar,Khan,shamchee1110@gmail.com,,,,,,,
Conscious Cycles,https://bitcamp2024.devpost.com/submissions/507815-conscious-cycles,Submitted (Gallery/Visible),Pending,Submit,4/20/2024 22:16,"Inspiration

A USCF study showed that ""one in three people learn they’re pregnant past six weeks’ gestation"". That's halfway through the first trimester! This number is disproportionately larger in the population of younger women and women of color. An issue that women who regularly have sex face is understanding the resources available to them and identifying the best time to take a pregnancy test. We wanted to come up with an idea to promote sexual health awareness within these communities. 

We were inspired to make this project because we are passionate about sexual health awareness on campus. As a volunteer for Help Center at UMD, we can understand how difficult it is to get access to the resources that you need to make sure you are safe and aware. 

What it does

Our app is a sexual health guide for women to identify the best time to take a pregnancy test to get the most accurate results. It also provides resources for sexual health services around campus and details different contraceptive methods to use to be safe or prevent pregnancy. 

How we built it

We used Kotlin in Android Studio to build our app. 

Challenges we ran into

We ran into a lot of issues with integrating Google Maps within our app. Learning how to work with the coordinates and fix the camera zoom so that it was in the right place was difficult. We also faced some issues with laying out some of our graphics.
Another issue we faced was research on the different topics we used in our application. We wanted to make sure that the facts we used and the algorithm we made were based on appropriate health sources. 

Accomplishments that we're proud of

We are very proud to get Google Maps up and running as it was very finicky to work with at times. We are also proud of how the app looks in general as we wanted to make sure that the elements of our app were cohesive.  

What we learned

We learned about integrating Google Maps into Android and configuring API keys. We also polished skills with laying out our UI. 

What's next for Conscious Cycles

Next, we would expand out app to include sexual health resources based on a person's current location so that we can reach an audience wider than UMD students.
",https://github.com/ZenSeven-ai/PregancyStatus,,"Best First Time Hack - Bitcamp, Best Social Good Hack - Bitcamp, Most Philanthropic Hack - Bloomberg","android-studio, kotlin",Hadijat,Oke,hadijat257@gmail.com,,I don't want to submit to any Bitcamp track-specific challenges. I understand that I can still participate in other Bitcamp sponsored challenges.,Yes,Through this experience I learned a lot about applying different Google APIs to a project. It was frustrating at times but when it works it makes a powerful tool.,"University of Maryland, College Park",,University of Maryland - College Park,1,azulioiscoolio,Cruz,josedcruz5@gmail.com,,,,,,,,,,
Untitled,,Draft,Pending,Manage team,4/20/2024 22:17,,,,,,Pouncetail,Yeo,pouncetail@gmail.com,,,,,,,University of Maryland - College Park,0,,,,,,,,,,,,,
EzStudy,https://bitcamp2024.devpost.com/submissions/507817-ezstudy,Submitted (Gallery/Visible),Pending,Submit,4/20/2024 22:21,"Inspiration

We were inspired by AI generative tools and wanting to find a task that could be completed faster with AI. As we near finals, studying is always a looming threat floating around in the back of our heads. Thus, we wanted to create something that could make studying easier and relieve our stress just a little. 

What it does

Our web application allows the user to drop in a PDF or PowerPoint and then receives an AI output containing a summary of the file.

How we built it

We built it using Reactjs, Flask, Python, AWS, and the ChatGPT API

Challenges we ran into

We ran into website/server problems as well as trying to expand on our project idea. AWS did not want to work for the entire second day, but we got it to work after a lot of coercing. We also had lots of trouble communicating between the frontend and backend, both in testing (because of CORS), and in the final implementation because of issues with proxy passing

Accomplishments that we're proud of

We are very proud of the fact that our website has a real domain and is hosted on the cloud.  We also feel proud that this is a tool that we would actually use. There is real functionality in what we have built, and it can positively impact our lives and others.

What we learned

We learned how to use Github, Git, and Visual Studio code to push and pull files for updating code.  We also learned how to connect the front and backend of a website. We learned how to make some advanced animations with ReactJS, and how to create production web servers. 

What's next for EzStudy

EzStudy can be expanded to accept more file formats and summarize files more effectively. We also want to add functionality for providing questions based off of text, and allowing users to chat with an AI that can answer questions about the text they provided.
",http://ezsum.study,https://youtu.be/zhILWDWGliY,"Best First Time Hack - Bitcamp, Best UI/UX Hack - Bitcamp, Best Digital Forensics Related Hack - Cipher Tech","react, chatgptapi, flask, amazon-web-services, python, javascript, html, css, nginx, gunicorn",Ethan,Everitt,eeverit1@terpmail.umd.edu,,Best Cybersecurity Track Hack - Bitcamp,Yes,"The use of GitHub, Git, and Visual Studio Code to push and pull code back and forth between group members was fairly new to us. It proved to be well worth to use these applications as it saved a lot of time updating new code.",University of Maryland,Ezsum.study,University of Maryland - College Park,1,funnysomething,,adisatheesh4@gmail.com,,,,,,,,,,
Untitled,,Draft,Pending,Manage team,4/20/2024 22:36,,,,,,Nick,Duvall,nickduvall03@gmail.com,,,,,,,Salisbury University,0,,,,,,,,,,,,,
Cash Claw,https://bitcamp2024.devpost.com/submissions/507825-cash-claw,Submitted (Gallery/Visible),Pending,Submit,4/20/2024 22:41,"Inspiration

We were talking about ways to just get free and easy money and came up with the idea of credit card referral offers.

What it does

You play a small claw minigame and if you win you will get a link to sign up for a credit card that gives you $100.

How we built it

We built this in react using a sample claw machine game and then used html to create the UI popups and explanations. 

Challenges we ran into

Implementing the crane on the webpage was a big problem since it was difficult to get it to work on the web, and then getting links to work between pages was a challenge as well.

Accomplishments that we're proud of

We are very proud of being able to create this project and coming up with the idea. Finishing our vision in the short time we had was a big accomplishment for us.

What we learned

We learned that people are very adverse to credit cards for whatever reason and do not truly understand the ease of signup and the massive benefits they provide. Periodically signing up for multiple credit cards and having a higher credit limit is better for your credit score.

What's next for Cash Claw

We can expand the offers that show up when you win. We can include more lucrative offers that can give you $200 or offers for signing up and depositing into a checking account. 
",https://guanglinwei.github.io/CashClaw/,,"Best Social Good Hack - Bitcamp, Best Gamification Hack - Bitcamp, Best Financial Hack - Capital One","react, css, typescript, html",IdleSicko,Zheng,sonicrules12@gmail.com,,I don't want to submit to any Bitcamp track-specific challenges. I understand that I can still participate in other Bitcamp sponsored challenges.,Yes,I enjoyed the wifi availability and power outlet distribution strategy. GitHub made it very easy for us to collaborate with each other and merge our changes together.,University Of Maryland: College Park,,University of Maryland - College Park,3,Vanessa,Li,vqli412@gmail.com,Hanish,Vadlamudi,hanishv15@gmail.com,Guang-Lin,Wei,guanglinwei@gmail.com,,,,
EmotionAI,,Draft,Pending,Project details,4/20/2024 23:03,"WIP
",,,,wip,Minsi,Hu,mimziwho@gmail.com,,,,,,,"University of Maryland - University College, University of Maryland - College Park",1,Isabelle,Park,ipark12@terpmail.umd.edu,,,,,,,,,,
Quest,https://bitcamp2024.devpost.com/submissions/507831-quest,Submitted (Gallery/Visible),Pending,Submit,4/20/2024 23:04,"Inspiration

What if life were more like Solo Leveling, where every day presented thrilling new quests, but without the danger of having to fight monsters? Enter Quest—a platform that brings a gamified spark to mundane daily routines and lets you climb the ranks with friends one quirky challenge at a time.

What is Quest?

Quest enhances your everyday routine with fun, unexpected missions. From finding the funkiest street art to discovering hidden landmarks in your city, Quest pushes you to explore and create. Snap your achievements, get them verified, and stack up votes. It's a social network with a competitive twist!

Every morning, users are given 24 hours to complete a quest and submit a picture and/or location pin as proof. Quest prompts are meant to be open-ended, allowing one’s creativity to shine through! Once you finish your daily quest, you can vote on your favorite quest submissions made by other users. As you complete quests in brave and creative ways, you’ll collect votes and climb the ranks. Users with the longest streaks of consecutive quests completed as well as the most total votes are displayed through in-app leaderboards.

How we built Quest

We used Firebase’s developer tools to construct a robust and scalable backend and to secure user authentication processes. Utilizing Google Cloud's infrastructure, we ensured high availability and global scalability. The Cloud Firestore Database provided a responsive and flexible NoSQL database for storing and syncing data effortlessly across users. Firebase Cloud Functions allowed us to run serverless backend code in response to database triggers and authentication events, making the app highly responsive to user interactions. With Firebase Authentication, we implemented a seamless and secure user login system.

On the frontend side of things, React Native enabled us to build a cross-platform mobile application with a native look and feel, ensuring a smooth and consistent user experience on both iOS and Android devices. 

Challenges and accomplishments

Originally, we envisioned Quest with a cutting-edge twist: using machine learning to verify user submissions. The intent was to create an automated system that could accurately assess photo submissions, rewarding users for precision and authenticity. While this innovative feature is still in the pipeline, we're enthusiastic about its development and are dedicated to bringing it to fruition in future iterations of Quest.

Another challenge we faced was incorporating the diverse features typical of a social media app. Crafting a user-friendly interface, integrating real-time interactions, and ensuring a seamless social connectivity required a deep dive into both front-end and back-end intricacies.

Despite these challenges, we're proud to have gained comprehensive knowledge in Firebase and React Native. Building a robust backend with real-time data sync as well as a cross-platform mobile application as a minimum viable product was no easy task, but we felt we did a great job given the time constraint.

Moreover, we're proud to have created an engaging concept that captures the spirit of adventure in everyday life. We hope to keep working on Quest and give people the thrill of “leveling up” in real life.

What's next for Quest

We hope to immediately start testing Quest with our friends back home and continuing to pack in features—think ML verifications, streak bonuses, team-based quests, and an experience system. There’s also lots of work to be done to strengthen the app’s backbone—smarter authentication, swift vote counts, smart caching, and neater code. Get ready for a leveled-up Quest!
","https://github.com/avimahesh21/Quest-backend, https://github.com/aneil04/quest",,"Best Bitcamp Hack - Bitcamp, Best Moonshot Hack - Bitcamp, Best Gamification Hack - Bitcamp","firebase, react-native, google-cloud",Alexander,Peal,aapeal04@gmail.com,,I don't want to submit to any Bitcamp track-specific challenges. I understand that I can still participate in other Bitcamp sponsored challenges.,No,"Our tech stack consisted of Firebase, React Native, and Google Cloud. We had a positive experience with each!",Virginia Tech,,Virginia Tech,0,,,,,,,,,,,,,
Finicial Advisor for College Students,,Draft,Pending,Project details,4/20/2024 23:12,"Inspiration

As college students, it can be difficult to understand how our current spending is affecting our long term financial goals. Our inspiration is our own questions about our spending and the desire to be more fiscally responsible.

What it does

Our project is a chatbot that can offer financial advice analyze your credit/debit card statements. It will show you the categorize your spending into different categories and make suggestions on where you can save. It can also offer independent financial advice regarding investment for beginners.

How we built it

We built our chatbot using the chat-gpt api in python and deployed it using gradio.

What we learned

We learned the versatility of language-learning models and how to implement them in our own projects. We also learned more SQL and databases.

What's next for Financial Advisor for College Students

The next thing we can add is a more in depth user interface where users can input their discretionary income so our chatbot has more information to generate financial advice.
",https://github.com/cstevens5/BitCamp2024/tree/main,,,"python, sql, machine-learning, ai, natural-language-processing, gradio",Sreenidhi,yaratha,yaratha@gmail.com,,,,,,,,0,,,,,,,,,,,,,
UMD Weather,,Draft,Pending,Additional info,4/20/2024 23:19,"Weather App installed within Apple

Users can search up cities, countries or zip code and find out the local time, temperature, humidity, and other unique features

**This project was built by 4 people who survived off of snacks and caffeine. The project utilizes a FE framework via React and API via openweathermap. Languages that we used consisted of React, Python, CSS. 

Challenges we ran into:

This was everyone's first time in a Hackathon and we had little to none software building skills. 
We had a hard time setting up alot of stuff, how to use github, learning the front-end and connecting it with the back-end process, and tons more. 

Accomplishments that we're proud of:

Somehow someway got this damn weather application to work

What we learned

A lot about how front-end and back-end are tied very closely with each other

What's next for UMD Weather

Add more unique features and maybe authorization
","https://github.com/lcunnin1/WeatherApp, https://weather-mjguio5sb-levente-cunninghams-projects.vercel.app/",," Best Hardware Hack - Bitcamp, Best First Time Hack - Bitcamp, Best UI/UX Hack - Bitcamp, Best Sustainability Hack - Bitcamp, Most Philanthropic Hack - Bloomberg, University Course Catalog Data Extraction and Query Challenge - Xficient,  Best Razzle Dazzle Hack - Bitcamp","react, javascript, css, python, openweathermap, jsx",Viet,Nguyen,vietnguyen0425@gmail.com,,I don't want to submit to any Bitcamp track-specific challenges. I understand that I can still participate in other Bitcamp sponsored challenges.,No,"We mainly used GitHub and VSCode to accomodate our project needs. 
It was nice learning about GitHub and how you're able to take snapshots of the code","University of Maryland, College Park",No,University of Maryland - College Park,2,lcunnin1,Cunningham,lcunnin1@terpmail.umd.edu,Will-Josh,Njeumi,willjosh.njeumi@gmail.com,,,,,,,
Untitled,,Draft,Pending,Manage team,4/20/2024 23:34,,,,,,Ostailor,Tailor,ostailor1234@gmail.com,,,,,,,University of Maryland - College Park,0,,,,,,,,,,,,,
Earth Rumble 5,,Draft,Pending,Additional info,4/20/2024 23:36,"Inspiration

We are long time fans of the show and we want to experiment with motion-tracking. We think this game have the potential to encourage people to stay healthy while having a blast. 

What it does

This game simulates the famous earthbending competition and allows you to manipulate and throw rocks entirely through various movements already built-in. 

How we built it

We use mediapipe AI motion-tracking in python and feed the output into Unity. 

Challenges we ran into

Our plan to make this game into multiplayer was ultimately scrapped due to mediapipe not being able to use GPU to run 2 motion-tracking AI at the same time. We ended up focusing on building the game for a single-player and tried to add fun elements into it to make up for the other plan. 

Accomplishments


Coming up with different plan when we hit a wall/difficulty
Combining multiple technologies
Focusing on user experience with the 3D models, etc. 


What we learned


How to combine python & C#
Building Environment of the game


What's next for Earth Rumble 5

Watch out for our fire-bending feature coming later this fall!
",,,"Best Bitcamp Hack - Bitcamp, Best UI/UX Hack - Bitcamp, Best Moonshot Hack - Bitcamp, Best Social Good Hack - Bitcamp, Best Gamification Hack - Bitcamp","python, unity, blender, mediapipe, spline, 3d",Indah,N,indhnformisch@gmail.com,,Best Machine Learning Track Hack - Bitcamp,Yes,"surprisingly fast internet compared to the previous hackathons, thank you!","university of maryland, college park",,,0,,,,,,,,,,,,,
PerLoan,,Draft,Pending,Additional info,4/20/2024 23:40,,,,"Best Bitcamp Hack - Bitcamp, Best UI/UX Hack - Bitcamp, Best Moonshot Hack - Bitcamp, Best Use of PropelAuth - MLH, Most Philanthropic Hack - Bloomberg, Best Financial Hack - Capital One,  Best Razzle Dazzle Hack - Bitcamp",,Pranav,Palle,pranav4096@gmail.com,,Best App Dev Track Hack - Bitcamp,Yes,GitHub was a very useful tool to manage the code of our application as it let us make changes and get them locally very easily.,"University of Maryland, College Park",,,0,,,,,,,,,,,,,
wAIste,,Draft,Pending,Manage team,4/20/2024 23:41,,,,,,Arav,Luthra,aravluthra@gmail.com,,,,,,,,0,,,,,,,,,,,,,
Book Camp,,Draft,Pending,Project overview,4/20/2024 23:41,,,,,"unity, github, csharp",Hailegebriel,Bizuayehu,hailebiz0@gmail.com,,,,,,,University of Maryland - College Park,2,Meron,Abera,meron3319@gmail.com,Kleb,,kaleabnb24@gmail.com,,,,,,,
AI Counselor,https://bitcamp2024.devpost.com/submissions/507868-ai-counselor,Submitted (Gallery/Visible),Pending,Submit,4/20/2024 23:43,"Inspiration

Our inspiration for this project was the Xficient challenge to build an application that parses through a university course description PDF. As an all freshman team, we know the struggle first hand of choosing classes from a selection of over 2000. Not to mention all of us have had experiences where we had to talk to a counselor, but their schedule was full for over a month. This desperation is what fueled the creation of AI counselor. A solution to help guide college students on their academic journey. While the challenge only required the application to process the first 100 pages, in order for it to truly be used as a tool to assist students, our application parses through the entire 800 page pdf.

What it does

AI Counselor is an AI assistant that takes in a university course listing PDF and responds to any question that user might have. Often times in order to retrieve information on a scale like this requires the knowledge of SQL, but this leaves most users unable to access this resource. Our application however, takes in natural language queries and outputs a result within 30 seconds. With an elegant and intuitive AI, critical course info is accessible to all.

How we built it

The core of our application started with trying to parse a PDF file and returning a readable JSON file. Due to the complex algorithms involved, our group decided on Python for its high development velocity. We experimented with various PDF parsing libraries, but landed on PyMuPDF for its speed in processing. We then split up into groups to work on converting natural language into SQL queries, exporting data from the PDF into a JSON file, and the Web Application framework to integrate each individual program. The most complex part was the conversion from natural language into SQL queries. We used Llama LLM from Meta for the conversion. However, Llama out of the box doesn't naturally output SQL queries well, so one of our group members fine-tuned the model to work better with our SQL queries.

Challenges we ran into

I would love to say it was smooth sailing all throughout, but I would be lying. We had our ups and downs, and by that I mean it was mostly down. Our morning started with a team discussion with everyone admitting that we don't really know how to use git. So instead of starting development, our team learned git using a test repository. After an arduous learning process, we finally started on our project. We then realized that we had no idea on how to structure a large scale application like this. It took a lot of fumbling through folders and redundant files to finally format our git repository. After looking through countless forums and documentations, we were able to witness our project come together like a puzzle. There was a moment around 2 in the afternoon where we wondered if we should just walk away, but we persevered.

Accomplishments that we're proud of

Our program runs mostly locally and does not require any external API access such as GPT-4. The PDF processing is extremely fast and deceptively simple. We also expanded the scope off the initial problem, expanding our program to cover the entire 800 page PDF rather than the 100 paged recommended. Most importantly, we persevered. We initially started with low hopes for our project, and believed it would a broken mess when we were done wit it. Regardless, we gave it our best shot and are genuinely proud of what we had created. From using technologies that we were not necessarily familiar with to ""powering"" through and squashing all of the bugs we encountered, we were truly able to work together as a team to make something beautiful.

What we learned

Sometimes you have to shoot for the moon, because you never know where you will end up. It might be cliche, but we really didn't expect to achieve anything close to the final product that we have today. There were many times that we thought that we would end up with a broken mess, but we pushed through it all and coded for about 30 hours. This experience taught us all about the development cycle, and what it takes to create a large scale application like this. And while we are incredibly proud of our final product, the experience we gained on this journey is worth much more than any prize could be. 

What's next for AI Counselor

We were limited by the hardware that we had due to the size of the llm. We had to take shortcuts in order to get around the fact we had limited processing power. Another feature we wanted to implement was to parse through multiple PDFs so that the model has more context to go off of. We would also like to implement auto updating the course catalogue to reflect the courses that change over the semester. We could go on and on, but those are the main features we would implement next.
",https://github.com/TomMitchell123/Bitcamp2024,https://youtu.be/tD3pK2KsXCc,"Best Moonshot Hack - Bitcamp, University Course Catalog Data Extraction and Query Challenge - Xficient","flask, react, python, javascript, ai, llm, json, llama3, ollama, html5, natural-language-processing, github, sql",Sunil,Pateel,spateel@terpmail.umd.edu,,Best Machine Learning Track Hack - Bitcamp,Yes,Most of the technology we interacted with was well documented so finding answers about bugs was not too hard.,University of Maryland,,University of Maryland - College Park,3,Jinson,Jimmy,jjimmy@terpmail.umd.edu,Adithya,Rathni,arathni@terpmail.umd.edu,Thomas,Mitchell,tmitch@terpmail.umd.edu,,,,
Wallet-Wise Realty,https://bitcamp2024.devpost.com/submissions/507872-wallet-wise-realty,Submitted (Gallery/Visible),Pending,Submit,4/21/2024 0:00,"Inspiration

Our inspiration for this project was that we wanted to remedy housing shortages and homelessness. In 2023 the Department of Housing and Urban Development found that the amount of homeless Americans starkly increased from 2022 by about 12%. This is extremely worrisome because of the exponential nature of this data. Additionally, many of our group members come from larger cities where homelessness is more apparent. Seeing people sleeping in the freezing cold makes us feel for them and want to do something to fix it. 

What it does

Half of buying a house is first searching for one. So, to tackle this issue, we have decided to take advantage of available data in the housing market and a consumer's spending and income data to sophisticatedly compute which properties they should look into purchasing. We incorporate data points such as the the square footage per dollar, the number of rooms, the number of baths, etc. We are able to display this information neatly to the user with lists and popups to give more insight into the property. We also save the user's spending and income data for better ease of use the next time.

How we built it

We built the application using ReactJS, Firebase, REST API calls, and mathematical computation. On the first day of the hackathon, we started by organizing our thoughts fully using diagrams and flow charts. We spent a couple hours doing this before writing a single line of code because of how important this step is to the software development cycle. Without a fully formed plan, the pace of work will tend to be much slower since confusion comes into the mix. Next, we started implementing our application by splitting up into teams before ultimately convening back together finish the frontend.  We managed to work at an exceptional pace and were able to debug our errors rather quickly to keep us on track to finish.

Challenges we ran into

Some challenges we ran into were along the line of being too ambitious for our given time frame. We hoped to be able to analyze spending data Capital One's API, and also implement many more visualization components. Unfortunately due to a lack of time, we were unable to fully accomplish our goals. Delving deeper into our issues with the Capital One API, we were very excited to use it because of how it gave us the ability to a specific user's spending data with tools such as machine learning (utilizing random forest regression) however, we quickly found that the API did not give us access to individual consumer data and so, we had to scrap a large portion of our idea.

Accomplishments that we're proud of

First and foremost, we are proud that we were able to even finish our application. Given that this was a first time hackathon for 2 of our group members, they still managed to learn extremely quickly. Their abilities to learn and then make consequential contributions was a huge accomplishment and we hope to take this same momentum into future projects. Additionally, we worked with technologies many of us were initially unfamiliar with such as Firebase and Google SSO login. Despite coming in blind on how to implement them, we were still able to seamlessly integrate them into our application.

What we learned

From this hackathon, we learned how to not only budget our time effectively, but also know when a project is just ambitious enough such that everyone in the group is able to significantly grow in their computer science knowledge. We also learned the value of planning and how it can dramatically speed everything up by putting everyone on the same page. Furthermore, we learned how to work together well despite lacking quality sleep and long hours. We know that these skills will translate extremely well into the actual work force and makes us excited to continue learning. 

What's next for Wallet-Wise Realty

The next steps for Wallet-Wise Realty would to implement the functionality from the Capital One API as mentioned before. This way, our algorithm would be able to be a lot more sophisticated. With the emergence of big data and data processing as a large field in computer science, we would be excited to use this to dip our toes into the field. We also want to partner with a large firm such as Capital One who does not have this functionality already built in. Doing so, we would have the ability to bring our application to the people who it would benefit the most. 
",https://github.com/Joshua152/Bitcamp2024,,"Best UI/UX Hack - Bitcamp, Best Financial Hack - Capital One","javascript, html, css, python, firebase, oauth, restapi",Joshua,Au,joshuahyau@gmail.com,,Best App Dev Track Hack - Bitcamp,Yes,"Capital One's Nessie API: Although we saw its potential for something innovative, the API was simply too stripped down without access to meaningful consumer data. We were under the impression that the data on the API overview would be accurate however, it was not.",University of Maryland - College Park,,"Monta Vista High School, University of Maryland - University College, University of Maryland - College Park",2,Noah,Der Garabedian,noahd3485@gmail.com,mfleckser,,mfleckser@gmail.com,,,,,,,
Green Companion,,Draft,Pending,Project overview,4/21/2024 0:03,,,,,,Daiwik,Kashyap,daiwik242@gmail.com,,,,,,,Pennsylvania State University,1,Swayam,Bansal,swayambansal01@gmail.com,,,,,,,,,,
Untitled,,Draft,Pending,Manage team,4/21/2024 0:09,,,,,,Alex,Y,blueputty01@gmail.com,,,,,,,West Windsor-Plainsboro High School South,0,,,,,,,,,,,,,
Bitcamp Brawlers - Disaster Data,https://bitcamp2024.devpost.com/submissions/507884-bitcamp-brawlers-disaster-data,Submitted (Gallery/Visible),Pending,Submit,4/21/2024 0:32,"Inspiration

The Fannie Mae challenge inspired us to analyze natural disaster data and housing effects.

What it does

Our web application allows a user to understand the prevalence of certain natural disasters in each of the 50 states. Then, they can look deeper into this data and its effect on housing. At the bottom we have a footer to provide additional resources and help to anyone struggling with the aftermath of these events. 

How we built it

We used React and TypeScript for our frontend development. We used Python and FastAPI for our backend development.

Challenges we ran into

Finding extensive and reliable data sets to analyze, formatting our data in an appealing way, and fixing never ending bugs!

Accomplishments that we're proud of

Coloring the heat map, finishing the side bar, click transitions.

What we learned

Always start with a concrete idea before going into development

What's next for Bitcamp Brawlers - Disaster Data

We hope to extend on what we accomplished this weekend in the future
","https://github.com/madelineanson/Bitcamp-Brawlers, https://github.com/jasonyih/BitcampBackend",,Best Use of APIs related to Housing/Climate Change - Fannie Mae,"react, typescript, fastapi, python",Madeline,Anson,madelineganson@gmail.com,,I don't want to submit to any Bitcamp track-specific challenges. I understand that I can still participate in other Bitcamp sponsored challenges.,Yes,I loved working with FastAPI because it was easy to set up and understand. I also loved using React as opposed to JavaScript.,"University of Maryland, College Park",,University of Maryland - College Park,3,Kimber,Gonzalez Lopez,martinezkimber03@gmail.com,marissabc,,mcarper@terpmail.umd.edu,Maria,House Ordonez,mhouseor@terpmail.umd.edu,,,,
ProjectFM,https://bitcamp2024.devpost.com/submissions/507898-projectfm,Submitted (Gallery/Visible),Pending,Submit,4/21/2024 1:02,"Inspiration

Our inspiration for ProjectFM stemmed from the desire to empower individuals with comprehensive housing information tailored to their unique needs. We envisioned a platform that seamlessly integrates housing and climate data, leveraging modern technologies to simplify the decision-making process for finding the perfect place to call home.

What it does

ProjectFM harnesses the power of Next.js, PropelAuth, JavaScript, HTML, Tailwind CSS, and Python to deliver a user-friendly experience that combines housing and climate information. By utilizing APIs, our platform calculates and presents essential data points, facilitating informed decisions about housing locations. Users can explore various factors, from housing affordability to climate suitability, all within a single interface.

How we built it

We meticulously crafted ProjectFM using a stack of cutting-edge technologies. Next.js provided the foundation for our dynamic web application, while PropelAuth ensured secure authentication and user management. JavaScript and HTML were instrumental in implementing functionality and structure, respectively. Tailwind CSS empowered us to create a sleek and responsive design, enhancing the user experience. Python served as the backbone for handling data processing and API interactions, seamlessly integrating housing and climate information into our platform.

Challenges we ran into

Throughout the development process, we encountered several challenges that pushed us to innovate and problem-solve. Integrating multiple APIs and ensuring smooth data flow presented initial hurdles, requiring meticulous planning and implementation. Additionally, optimizing performance and maintaining code scalability posed ongoing challenges as we aimed to deliver a fast and efficient user experience. Overcoming these obstacles demanded collaborative efforts, extensive testing, and continuous refinement of our approach.

Accomplishments that we're proud of

We take immense pride in the achievements of ProjectFM, including:

Successfully integrating diverse technologies to create a cohesive and feature-rich platform.
Implementing a user-friendly interface that streamlines the housing location selection process.
Leveraging APIs to provide accurate and up-to-date housing and climate information.
Prioritizing data security and user privacy through robust authentication mechanisms.
Receiving positive feedback from early users and stakeholders, validating the value proposition of our solution.

What we learned

The development of ProjectFM provided invaluable learning experiences for our team. We deepened our understanding of Next.js and Tailwind CSS, mastering their capabilities for building modern web applications. We gained proficiency in leveraging APIs to access external data sources and process information dynamically. Additionally, collaborating on a complex project enhanced our teamwork, communication, and problem-solving skills, equipping us for future endeavors in software development.

What's next for ProjectFM

Looking ahead, we envision several exciting opportunities to enhance and expand ProjectFM:

Implementing advanced algorithms for personalized housing recommendations based on user preferences and feedback.
Introducing additional data sources and metrics to provide comprehensive insights into housing suitability.
Enhancing the platform's scalability and performance to accommodate growing user demand.
Exploring partnerships with real estate agencies and environmental organizations to enrich data offerings and extend our reach.
Continuously refining the user experience through iterative updates and user feedback integration.
ProjectFM is poised to evolve into the go-to destination for informed housing decisions, empowering individuals to find their ideal living spaces with confidence and ease.
","https://projectfm.vercel.app/, https://github.com/Ramareigns/BitCamp-24",,"Best First Time Hack - Bitcamp, Best UI/UX Hack - Bitcamp, Best Moonshot Hack - Bitcamp, Best Social Good Hack - Bitcamp, Best Use of PropelAuth - MLH, Most Philanthropic Hack - Bloomberg, Best Use of APIs related to Housing/Climate Change - Fannie Mae","nextjs, javascript, html, tailwindcss, typescript, python, propelauth, api",Ramareigns,Wijesinghe,ramithwijesinghe@gmail.com,,I don't want to submit to any Bitcamp track-specific challenges. I understand that I can still participate in other Bitcamp sponsored challenges.,Yes,We got to learn a lot about web development and PropelAuth.,University of Maryland,No,University of Maryland - College Park,1,M,Dev,mattbook321@gmail.com,,,,,,,,,,
Address Gun Violence in Schools in DC,https://bitcamp2024.devpost.com/submissions/507900-address-gun-violence-in-schools-in-dc,Submitted (Gallery/Visible),Pending,Submit,4/21/2024 1:04,"Inspiration

As students of an educational institution, we assume that schools are a safe space for us to learn and explore our interests. However, to see it being jeopardized due to a weapon has long lasting effects on people that experience a school shooting. In some cases, students may experience symptoms of post-traumatic stress disorder (PTSD) and have difficulty concentrating on their studies or participating in school activities. Additionally, students who have lost friends or loved ones in these events may struggle with grief and feelings of isolation. So, this topic not only needs to be addressed to protect innocent people from harm's way but it also holds an emotional connection to us as students of schools.

What it does

It provides information about school shootings in DC from the years 2020-2023 and displays it in an easy-to-understand format that has details about specific shootings.

How we built it

We developed the graphs using ArcGIS, as it is a great tool to visualize various types of data. We implemented these graphs as tables into an app that was made with the Flutter plug-in.

Challenges we ran into

We originally wanted to directly implement our graphs from ESRI into our app, but was facing challenges with the API. Instead, we used to design structures like image carousels to showcase the same information.

Accomplishments that we're proud of

This is our first time using Flutter and creating a project for a hackathon. We learned a lot from this process and are proud of our results in the time we had.

What we learned

We learned a lot about how to develop an app using Flutter that has multiple pages and how to integrate images and nav bars.

What's next for Address Gun Violence in Schools in DC

We want to find a way to automate the data that is put onto this app, and ideally make one for each state.
",https://github.com/sgubba1/gunviolenceindcschools-bitcamp,https://youtu.be/hOELcD_h7Yo?si=yNYRN0THKwcRx_HD,"Best First Time Hack - Bitcamp, Best Social Good Hack - Bitcamp","flutter, dart, esri",avishig,Gupta,avishigupta1115@gmail.com,,Best App Dev Track Hack - Bitcamp,Yes,"It was a great experience, and we learned a lot from the mentors that helped us!",University of Maryland - College Park,,University of Maryland - College Park,0,,,,,,,,,,,,,
SkyCast,,Draft,Pending,Project details,4/21/2024 1:05,,,,,,Shyam,Ganapathy,shyamganapathy@live.com,,,Yes,,University Of Maryland,,University of Maryland - College Park,0,,,,,,,,,,,,,
Audit AI,,Draft,Pending,Project overview,4/21/2024 1:06,,,,,,Ateef,Mahmud,ateefayman@gmail.com,,,,,,,"University of Maryland - College Park, Carnegie Mellon University",1,Mehul,Goel,mehulg@andrew.cmu.edu,,,,,,,,,,
Vacation Location,,Draft,Pending,Additional info,4/21/2024 1:19,"Inspiration

We wanted a program that would enable homeowners to plan for the future and buy houses that would sustain their market value.

What it does

We developed a program that is able to indicate whether a location is suitable for buying a house based on previous natural disaster data in the area as well as home costs during a given time frame. Given a time frame, the program retrieves all natural disasters that occurred in the given county and retrieves data about housing costs between a year before and after the natural disaster occurred in monthly intervals.

How we built it

We used Svelte for the front-end and Flask for the backend. In Svelte, we utilized Google Maps' API to display a map. In the map, we added markers to indicate natural disasters that occurred in a given county during a given time span. The markers were labeled with the name of the natural disasters and were clickable to show the user data on housing costs of houses in the specified area and time frame. Using Flask, we utilized Zillow's housing cost API as well as the U.S. Census' counties API to get the counties of every state and a typical house cost for a given county during a certain time frame.

Challenges we ran into

Some challenges we ran into were learning how to use the Google Maps API, finding comprehensive datasets suitable for use, correctly parsing and packaging data, integrating Flask with Svelte, making sure files had access to other necessary files by changing directories and paths, and making sure that versions of python were consistent.

Accomplishments that we're proud of

Implementing an interactive map using the Google Maps API, creating a marker on the Google Maps API based on a user's input for location, making the marker able to be clicked and open a pop up with information, accurately parsing through databases for necessary information by using SQLite3, and retrieving data from 12 months before and after a natural disaster's date.

What we learned

We learned how to use the Google Maps API, how to pull data from databases and parse through that data, how to integrate Flask and Svelte, how to create a clickable marker that appears on the map, how to manipulate and send the data from the back-end Flask server to the front-end Svelte server and have that data appear to the user.

What's next for Vacation Location

Some next steps include adding more categories that help to indicate whether a location is fit for a vacation house such as income data, education data, and crime data for a given county during a given time frame.
",,,Best Use of APIs related to Housing/Climate Change - Fannie Mae,"python, javascript, sqlite, svelte, flask, json, query, html, google-maps, css, fema-database, zillow-database, us-county-census-database, vscode, pycharm",Alexander,Tong,alexdthi@gmail.com,,Best App Dev Track Hack - Bitcamp,No,GitHub was extremely useful for allowing my team to easily share code between frontend and backend teams as well as between the two teams.,"University of Maryland, College Park",,"Thomas Jefferson High School for Science and Technology, University of Maryland - College Park",2,Kathy331,Chen,kathychen331@outlook.com,Paolo,Atienza,paoloatienza235@gmail.com,,,,,,,
Moth Challenege,https://bitcamp2024.devpost.com/submissions/507911-moth-challenege,Submitted (Gallery/Visible),Pending,Submit,4/21/2024 1:25,"The Story Behind ""The Moth Challenge""

Inspiration

Our journey began with a spark of inspiration from the infamous Cicada 3301 puzzles and the CIA's Cyber Security Intelligence Tests. These challenges, known for their complexity and the depth of knowledge they require, motivated us to create an accessible platform where anyone can learn and test their cybersecurity skills. We aimed to demystify the field of cyber security and make it engaging through gamified challenges.

What We Learned

As we embarked on this project, none of us were seasoned security experts. This meant that every step of our journey was not just about building something but also about learning it deeply ourselves. We had to dive into various cybersecurity concepts such as cryptography, steganography, and web security. Learning to implement these in Python, JavaScript, and through web frameworks like React and Flask was equally challenging and exhilarating.

We also explored using Firebase for backend services, which was a new technology for some team members. The learning curve was steep but rewarding, as we managed to integrate all these technologies into a seamless experience for the user.

How We Built It

Our tech stack was comprehensive:

Frontend: We used React to build a user-friendly interface. This allowed us to create a dynamic and responsive design that could accommodate the various types of puzzles and challenges.
Backend: Flask served as our backend framework, handling requests and serving the content needed for each challenge.
Programming: Core logic and puzzle algorithms were implemented in Python and JavaScript, which allowed us to manipulate data effectively and handle complex operations.
Database & Hosting: Firebase provided us with the tools necessary for hosting our application and managing user data securely and efficiently.

Challenges Faced

One of the major challenges we faced was the initial lack of deep knowledge in cybersecurity. Each member of the team had to undertake personal studies and group learning sessions. We also encountered technical difficulties in integrating various technologies. Debugging cross-language interactions between Python and JavaScript posed significant hurdles.

Moreover, designing puzzles that were challenging yet solvable for beginners required a delicate balance. We spent numerous hours tweaking the difficulty levels and ensuring that the learning curve was not too steep.

Conclusion

Building ""The Moth Challenge"" was as much about constructing a project as it was about personal growth and team development. We pushed the boundaries of our knowledge and skills, learned from each other, and created a platform that we hope will inspire and educate many others in the field of cybersecurity. This project not only taught us about technical skills but also about resilience, teamwork, and the importance of a clear, shared vision.
","https://github.com/kartikey-onlineGOD/BitCamp-2024-Cyber-, http://phishandchips.us",,"Best UI/UX Hack - Bitcamp, Best Social Good Hack - Bitcamp, Best Gamification Hack - Bitcamp, People's Choice Hack - Bitcamp, Best Domain Name from GoDaddy Registry - MLH, Best Digital Forensics Related Hack - Cipher Tech","python, firebase, flask, google, google-cloud, javascript, figma, html5, css3, react, react-native",Kartikey,Pandey,kartikeypandey18@gmail.com,,Best Cybersecurity Track Hack - Bitcamp,Yes,"During our recent hackathon, we utilized Firebase for our backend services, attracted by its scalability and comprehensive features. Here are some key insights:

Usability
Firebase's intuitive console and excellent documentation made it easy to implement features like databases, user authentication, and hosting. Its user-friendly design is ideal for both novices and experienced developers.

Performance
Firebase excelled in real-time data syncing with Firestore, enhancing the responsiveness of our application. However, complex queries sometimes reduced performance, an area for potential improvement.

Integration
The seamless integration with various platforms and Google Cloud services streamlined our development process, making Firebase a versatile tool for cross-platform development.

Cost
The free tier is generous, but it's important to monitor usage to avoid unexpected costs, especially in a scalable project environment.

Overall Impact
Firebase significantly reduced our backend development time, allowing us to focus on enhancing user experience. Its ease of use and robust features made it a standout choice for the hackathon.

Suggestions for Improvement
Better support for complex queries in Firestore and clearer pricing guidelines would further enhance Firebase’s utility.

In conclusion, Firebase is highly recommended for its robust features and ease of deployment, making it an excellent choice for rapid development environments like hackathons.",Pennsylvania State University,phishandchips.us,Pennsylvania State University,1,Parth,Kshirsagar,parth.kshirsagar1410@gmail.com,,,,,,,,,,
Untitled,,Draft,Pending,Manage team,4/21/2024 1:27,,,,,,Sherin Feno,Kumaresan,sherink1@umbc.edu,,,,,,,University of Maryland - Baltimore County,0,,,,,,,,,,,,,
Untitled,,Draft,Pending,Manage team,4/21/2024 2:02,,,,,,Mihir,Mahesh,emailmihirmahesh@gmail.com,,,,,,,,0,,,,,,,,,,,,,
CuttingCorners,,Draft,Pending,Project overview,4/21/2024 2:08,,,,,,Kieran,Khan,kierank.pc@gmail.com,,,,,,,University of Maryland - College Park,1,Matthew,Liu,mliu218@terpmail.umd.edu,,,,,,,,,,
GuessExamGrade,,Draft,Pending,Manage team,4/21/2024 2:10,,,,,,junyun,huang,h975894552@gmail.com,,,,,,,University of Maryland - College Park,1,Tim,Zhang,czhang35@terpmail.umd.edu,,,,,,,,,,
TerpFit,https://bitcamp2024.devpost.com/submissions/507952-terpfit,Submitted (Gallery/Visible),Pending,Submit,4/21/2024 2:28,"Inspiration

Working out at Eppley, waiting for machines, and extending your workouts because you are waiting for long periods. Occasionally, working out alone and wanting someone else to work out with and potentially become friends.

What it does

A user creates a profile using registration and login features, which are stored and authenticated using Firebase. Then, the user can create a workout plan, find a workout buddy, or see the availability of machines at Eppley Recreation Center. Creating a workout plan entails building a five or 7-day schedule where you decide which exercises and muscles you will be training on that day. You can view your past workout plans, and a reward program is in place for those who stick to their workout routine. Your profile will show the user's avatar, some information about the user, and their status in the rewards. An info button displays the various tiers in the status program. For the find workout buddy section, after answering a couple of questions, a list of potential buddies will be displayed. You can press on the buddy and receive contact information to contact them. We did not create the front-end or back-end for the machine availability aspect, but we brainstormed the implementation.

How we built it

We built it in Visual Studio Code, using React Expo and viewing our code on our phones. We started with Figma to visualize the UI that we wanted to create. Then, we split up and worked on React-Native to implement the front end and create a database and fast API to track machine availability. Then, we worked on Firebase to authenticate user profiles. After assembling the project pieces, we pushed all our code to GitHub for future use despite being unable to create a finished result. 

Challenges we ran into

We ran into a challenge when initially implementing the front end using React. We were creating a mobile app, and while trying to navigate between pages, we used React Router. While running into several errors, we eventually realized that React Router is only meant for web applications and React-Native is intended for mobile applications. Another challenge we encountered was not getting Firebase to authenticate user profiles, and we could not debug the issue.

Accomplishments that we're proud of

We are proud of the front-end implementation, from drawing the user interface on paper to Figma and then in react native.

What we learned

We learned a lot about the React tech stack, Firebase documentation, and command line arguments to emulate React expo apps on a mobile phone.

What's next for TerpFit

We plan on continuing to work on this project as we are passionate about the finished project and hope to piece all our technologies together to create a functional application.
",https://github.com/eswar-karavadi/Bitcamp2024,,"Best First Time Hack - Bitcamp, Best UI/UX Hack - Bitcamp, People's Choice Hack - Bitcamp","react-native, firebase, python, javascript, fastapi",Rivan,Parikh,rparikh6@terpmail.umd.edu,,Best App Dev Track Hack - Bitcamp,No,"React-Native, React-Router-Dom, Figma, Firebase Authentication, Firebase Realtime Database, GitHub, Command Line, Python","University of Maryland, College Park",,University of Maryland - College Park,2,Aymaan,Hussain,ahussai8@terpmail.umd.edu,Samik,Wangneo,swangneo@terpmail.umd.edu,,,,,,,
fortnite battle pass,https://bitcamp2024.devpost.com/submissions/507953-fortnite-battle-pass,Submitted (Gallery/Visible),Pending,Submit,4/21/2024 2:28,"Inspiration

i really like fortnite and vbucks and the costco churro

What it does

you can write thoughts about fortnite and the (former) costco churro. we don't store your data!!!

How we built it

i wrote code

Challenges we ran into

idk how to do html

Accomplishments that we're proud of

first bitcamp!!!

What we learned

i gotta prepare more and think of an actual project idea next time

What's next for fortnite battle pass

:)
",https://github.com/jzhu0717/bitcamp24,,"Best First Time Hack - Bitcamp, Best UI/UX Hack - Bitcamp, People's Choice Hack - Bitcamp","react, html5, css, javascript",Joshua,Zhu,joshuazjzhu@gmail.com,,I don't want to submit to any Bitcamp track-specific challenges. I understand that I can still participate in other Bitcamp sponsored challenges.,No,i learned more features about github,"University of Maryland, College Park",,University of Maryland - College Park,0,,,,,,,,,,,,,
The Better Bridge Card Game,https://bitcamp2024.devpost.com/submissions/507960-the-better-bridge-card-game,Submitted (Gallery/Visible),Pending,Submit,4/21/2024 2:37,"Inspiration

We all liked the card game Bridge

What it does

Allows the user to play Bridge card game against three computer opponents

How we built it

We built the project using Python and the PyGame library

Challenges we ran into

Unfamiliarity with the libraries, collaborative software development workflow

Accomplishments that we're proud of

We got it working in a very short timeframe with a language/library we don't typically use

What we learned

We learned how to use PyGame, Git, Python

What's next for The Better Bridge Card Game

Making the betting system work and adding machine learning to the computer players
",https://github.com/Sonikyu/Bitcamp-2024-Better-Bridge,,,"python, pygame, github, love",John,Riganati,iamjpr3@gmail.com,,I don't want to submit to any Bitcamp track-specific challenges. I understand that I can still participate in other Bitcamp sponsored challenges.,No,"Github worked well for collaboration, PyGame was likely not the right choice for our project",University of Maryland College Park,,"University of Maryland - College Park, Hunter College High School",3,Max,Park,parkr.m465@gmail.com,Alex,Tsai,hanyunetsai@gmail.com,AndyLiao1,,andyliao888@gmail.com,,,,
TaskBuddy,,Draft,Pending,Additional info,4/21/2024 2:43,"Inspiration

Duolingo

What it does

It detects completed tasks based on a database of completed task photos. Users lose points for not completing tasks within a set amount of time.

How we built it

Unreal Engine 5

Challenges we ran into

Getting AR app to run on my phone.

Accomplishments that we're proud of

What we learned

What's next for TaskBuddy
",,,"Best UI/UX Hack - Bitcamp, Best Moonshot Hack - Bitcamp, Best Gamification Hack - Bitcamp","unreal-engine, ar, mobile",Jeshua,SS,jazzyjeshua@gmail.com,,Best App Dev Track Hack - Bitcamp,Yes,I struggled to get Unreal Engine to comply with my phone even though it's fairly new.,Baltimore Polytechnic Institute,,Baltimore Polytechnic Institute,0,,,,,,,,,,,,,
PocketBot,,Draft,Pending,Project overview,4/21/2024 2:55,,,,,,jugrajsingh04,Singh,jsingh18@terpmail.umd.edu,,,,,,,University of Maryland - College Park,1,Vikram,Khandelwal,vikram@syntag.ai,,,,,,,,,,
Saplng,,Draft,Pending,Manage team,4/21/2024 2:56,,,,,,Ryan,DeCamp,ryan.e.decamp@gmail.com,,,,,,,University of Maryland - College Park,2,Jack,Burke,jburke18@terpmail.umd.edu,Caitlyn,Schneider,cschnei@terpmail.umd.edu,,,,,,,
Untitled,,Draft,Pending,Manage team,4/21/2024 2:57,,,,,,Carolyn,Lee,ckl62015@gmail.com,,,,,,,University of Maryland - College Park,3,Michelle,Chung,mchung15@terpmail.umd.edu,Dilan,Kaza,dkaza0001@gmail.com,Rukayat,Fakoya,rukayat.fakoya24@gmail.com,,,,
Untitled,,Draft,Pending,Manage team,4/21/2024 3:02,,,,,,Shashank,Bhardwaj,sbhardw7@umd.edu,,,,,,,,0,,,,,,,,,,,,,
Untitled,,Draft,Pending,Manage team,4/21/2024 3:05,,,,,,Julie,Lin,jlinx2004@icloud.com,,,,,,,University of Maryland - University College,0,,,,,,,,,,,,,
Carbon Cadet,,Draft,Pending,Project overview,4/21/2024 3:05,,,,,,Binny,Chopra,159.binny@gmail.com,,,,,,,,1,Shashank,Bhardwaj,sbhardw7@umd.edu,,,,,,,,,,
Budget Hero,,Draft,Pending,Project overview,4/21/2024 3:08,,,,,"javascript, python, html5, css3, react",Carson,Dalziel,cdalziel@terpmail.umd.edu,,,,,,,University of Maryland - College Park,2,Yuji,Wexler,yuji@terpmail.umd.edu,Noah,,nkasica21@gmail.com,,,,,,,
Untitled,,Draft,Pending,Manage team,4/21/2024 3:12,,,,,,Ethan,Qiu,ecq6096@gmail.com,,,,,,,,0,,,,,,,,,,,,,
